"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "components_BeanHeadVisualizer_tsx";
exports.ids = ["components_BeanHeadVisualizer_tsx"];
exports.modules = {

/***/ "./components/BeanHeadVisualizer.tsx":
/*!*******************************************!*\
  !*** ./components/BeanHeadVisualizer.tsx ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var beanheads__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! beanheads */ \"beanheads\");\n/* harmony import */ var beanheads__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(beanheads__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _ModularBeanHead__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./ModularBeanHead */ \"./components/ModularBeanHead.tsx\");\n\n\n\n\n\n// Create key-value pairs for dropdown options\nconst createOptions = (obj)=>{\n    return Object.keys(obj).map((key)=>({\n            value: key,\n            label: key.charAt(0).toUpperCase() + key.slice(1).replace(/([A-Z])/g, \" $1\")\n        }));\n};\n// Define option maps\nconst optionMaps = {\n    skinTone: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.theme.colors.skin),\n    eyes: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.eyesMap),\n    eyebrows: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.eyebrowsMap),\n    mouth: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.mouthsMap),\n    hair: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.hairMap),\n    facialHair: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.facialHairMap),\n    clothing: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.clothingMap),\n    accessory: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.accessoryMap),\n    graphic: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.graphicsMap),\n    hat: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.hatMap),\n    body: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.bodyMap),\n    hairColor: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.theme.colors.hair),\n    clothingColor: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.theme.colors.clothing),\n    hatColor: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.theme.colors.clothing),\n    lipColor: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.theme.colors.lipColors),\n    circleColor: createOptions(beanheads__WEBPACK_IMPORTED_MODULE_2__.theme.colors.bgColors)\n};\n// Type-safe random option selector\nconst getRandomOption = (options)=>{\n    const keys = Object.keys(options);\n    return keys[Math.floor(Math.random() * keys.length)];\n};\n// Type assertions for proper typing\nconst getRandomOptions = ()=>{\n    const skinTone = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.theme.colors.skin);\n    const eyes = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.eyesMap);\n    const eyebrows = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.eyebrowsMap);\n    const mouth = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.mouthsMap);\n    const hair = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.hairMap);\n    const facialHair = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.facialHairMap);\n    const clothing = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.clothingMap);\n    const accessory = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.accessoryMap);\n    const graphic = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.graphicsMap);\n    const hat = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.hatMap);\n    const body = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.bodyMap);\n    const hairColor = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.theme.colors.hair);\n    const clothingColor = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.theme.colors.clothing);\n    const hatColor = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.theme.colors.clothing);\n    const lipColor = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.theme.colors.lipColors);\n    const circleColor = getRandomOption(beanheads__WEBPACK_IMPORTED_MODULE_2__.theme.colors.bgColors);\n    return {\n        skinTone,\n        eyes,\n        eyebrows,\n        mouth,\n        hair,\n        facialHair,\n        clothing,\n        accessory,\n        graphic,\n        hat,\n        body,\n        hairColor,\n        clothingColor,\n        hatColor,\n        lipColor,\n        circleColor,\n        mask: true,\n        faceMask: false,\n        lashes: Math.random() > 0.5\n    };\n};\n// Eye animation options\nconst eyeAnimationOptions = [\n    {\n        value: \"none\",\n        label: \"None\"\n    },\n    {\n        value: \"blink\",\n        label: \"Blinking Eyes\"\n    },\n    {\n        value: \"leftTwitch\",\n        label: \"Left Eye Twitch\"\n    }\n];\n// Mouth animation options\nconst mouthAnimationOptions = [\n    {\n        value: \"none\",\n        label: \"None\"\n    },\n    {\n        value: \"happyTalk\",\n        label: \"Happy Talk\"\n    },\n    {\n        value: \"sadTalk\",\n        label: \"Sad Talk\"\n    },\n    {\n        value: \"normalTalk\",\n        label: \"Normal Talk\"\n    }\n];\n// Expression animation options\nconst expressionAnimationOptions = [\n    {\n        value: \"none\",\n        label: \"None\"\n    },\n    // Success levels\n    {\n        value: \"\",\n        label: \"---- Success Levels ----\",\n        disabled: true\n    },\n    {\n        value: \"godlikeSuccess\",\n        label: \"Godlike Success\"\n    },\n    {\n        value: \"greatSuccess\",\n        label: \"Great Success\"\n    },\n    {\n        value: \"success\",\n        label: \"Success\"\n    },\n    {\n        value: \"mildSuccess\",\n        label: \"Mild Success\"\n    },\n    {\n        value: \"neutral\",\n        label: \"Neutral\"\n    },\n    {\n        value: \"mildFailure\",\n        label: \"Mild Failure\"\n    },\n    {\n        value: \"failure\",\n        label: \"Failure\"\n    },\n    {\n        value: \"terribleFailure\",\n        label: \"Terrible Failure\"\n    },\n    {\n        value: \"tragicFailure\",\n        label: \"Tragic Failure\"\n    },\n    // Talking Success Levels\n    {\n        value: \"\",\n        label: \"---- Talking Success Levels ----\",\n        disabled: true\n    },\n    {\n        value: \"godlikeSuccessTalk\",\n        label: \"Godlike Success (Talking)\"\n    },\n    {\n        value: \"greatSuccessTalk\",\n        label: \"Great Success (Talking)\"\n    },\n    {\n        value: \"successTalk\",\n        label: \"Success (Talking)\"\n    },\n    {\n        value: \"mildSuccessTalk\",\n        label: \"Mild Success (Talking)\"\n    },\n    {\n        value: \"neutralTalk\",\n        label: \"Neutral (Talking)\"\n    },\n    {\n        value: \"mildFailureTalk\",\n        label: \"Mild Failure (Talking)\"\n    },\n    {\n        value: \"failureTalk\",\n        label: \"Failure (Talking)\"\n    },\n    {\n        value: \"terribleFailureTalk\",\n        label: \"Terrible Failure (Talking)\"\n    },\n    {\n        value: \"tragicFailureTalk\",\n        label: \"Tragic Failure (Talking)\"\n    },\n    // Emotions\n    {\n        value: \"\",\n        label: \"---- Emotions ----\",\n        disabled: true\n    },\n    {\n        value: \"happy\",\n        label: \"Happy\"\n    },\n    {\n        value: \"sad\",\n        label: \"Sad\"\n    },\n    {\n        value: \"angry\",\n        label: \"Angry\"\n    },\n    {\n        value: \"surprised\",\n        label: \"Surprised\"\n    },\n    {\n        value: \"confused\",\n        label: \"Confused\"\n    },\n    {\n        value: \"excited\",\n        label: \"Excited\"\n    },\n    {\n        value: \"love\",\n        label: \"Love\"\n    },\n    {\n        value: \"shocked\",\n        label: \"Shocked\"\n    },\n    // Talking Emotions\n    {\n        value: \"\",\n        label: \"---- Talking Emotions ----\",\n        disabled: true\n    },\n    {\n        value: \"happyTalk\",\n        label: \"Happy (Talking)\"\n    },\n    {\n        value: \"sadTalk\",\n        label: \"Sad (Talking)\"\n    },\n    {\n        value: \"angryTalk\",\n        label: \"Angry (Talking)\"\n    },\n    {\n        value: \"surprisedTalk\",\n        label: \"Surprised (Talking)\"\n    },\n    {\n        value: \"confusedTalk\",\n        label: \"Confused (Talking)\"\n    },\n    {\n        value: \"excitedTalk\",\n        label: \"Excited (Talking)\"\n    },\n    {\n        value: \"loveTalk\",\n        label: \"Love (Talking)\"\n    },\n    {\n        value: \"shockedTalk\",\n        label: \"Shocked (Talking)\"\n    }\n];\nconst BeanHeadVisualizer = ()=>{\n    const [options, setOptions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(getRandomOptions());\n    const [eyeAnimation, setEyeAnimation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"none\");\n    const [mouthAnimation, setMouthAnimation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"none\");\n    const [expressionAnimation, setExpressionAnimation] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"none\");\n    const [reactCode, setReactCode] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"\");\n    // Generate React code based on current props\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        const code = `import { BeanHead } from 'beanheads';\n\nconst Avatar = () => (\n  <BeanHead\n    ${Object.entries(options).map(([key, value])=>{\n            if (typeof value === \"boolean\") {\n                return `${key}={${value}}`;\n            }\n            return `${key}=\"${value}\"`;\n        }).join(\"\\n    \")}\n  />\n)`;\n        setReactCode(code);\n    }, [\n        options\n    ]);\n    // Type-safe prop updater\n    const updateProp = (name, value)=>{\n        setOptions((prev)=>({\n                ...prev,\n                [name]: value\n            }));\n    };\n    // Randomize all properties\n    const randomize = ()=>{\n        // Turn off all animations when randomizing\n        setEyeAnimation(\"none\");\n        setMouthAnimation(\"none\");\n        setExpressionAnimation(\"none\");\n        setOptions(getRandomOptions());\n    };\n    // Handle eye animation change\n    const handleEyeAnimationChange = (value)=>{\n        setEyeAnimation(value);\n        // Turn off expression animation if eye animation is enabled\n        if (value !== \"none\") {\n            setExpressionAnimation(\"none\");\n        }\n    };\n    // Handle mouth animation change\n    const handleMouthAnimationChange = (value)=>{\n        setMouthAnimation(value);\n        // Turn off expression animation if mouth animation is enabled\n        if (value !== \"none\") {\n            setExpressionAnimation(\"none\");\n        }\n    };\n    // Handle expression animation change\n    const handleExpressionAnimationChange = (value)=>{\n        setExpressionAnimation(value);\n        // Turn off eye and mouth animations if expression animation is enabled\n        if (value !== \"none\") {\n            setEyeAnimation(\"none\");\n            setMouthAnimation(\"none\");\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"container mx-auto p-4\",\n        children: [\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h1\", {\n                className: \"text-3xl font-bold mb-6\",\n                children: \"BeanHead Visualizer\"\n            }, void 0, false, {\n                fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                lineNumber: 231,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"flex flex-col md:flex-row gap-8\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full md:w-1/3 flex flex-col items-center\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"w-64 h-64\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_ModularBeanHead__WEBPACK_IMPORTED_MODULE_3__.ModularBeanHead, {\n                                    avatarProps: options,\n                                    eyeAnimation: eyeAnimation,\n                                    mouthAnimation: mouthAnimation,\n                                    expressionAnimation: expressionAnimation\n                                }, void 0, false, {\n                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                    lineNumber: 237,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                lineNumber: 236,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                className: \"mt-6 mb-6 w-full\",\n                                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"grid grid-cols-1 gap-4 mb-6\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                    className: \"block text-lg font-medium mb-2\",\n                                                    children: \"Expression Animation\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                    lineNumber: 249,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                                    value: expressionAnimation,\n                                                    onChange: (e)=>handleExpressionAnimationChange(e.target.value),\n                                                    className: \"w-full p-2 border border-gray-300 rounded-md\",\n                                                    children: expressionAnimationOptions.map((option)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: option.value,\n                                                            disabled: option.disabled,\n                                                            children: option.label\n                                                        }, option.value || option.label, false, {\n                                                            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                            lineNumber: 256,\n                                                            columnNumber: 21\n                                                        }, undefined))\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                    lineNumber: 250,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                expressionAnimation !== \"none\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                    className: \"text-xs text-amber-600 mt-1\",\n                                                    children: \"Expression animations override eye and mouth animations\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                    lineNumber: 262,\n                                                    columnNumber: 19\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                            lineNumber: 248,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                    className: \"block text-lg font-medium mb-2\",\n                                                    children: \"Eye Animation\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                    lineNumber: 269,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                                    value: eyeAnimation,\n                                                    onChange: (e)=>handleEyeAnimationChange(e.target.value),\n                                                    className: \"w-full p-2 border border-gray-300 rounded-md\",\n                                                    disabled: expressionAnimation !== \"none\",\n                                                    children: eyeAnimationOptions.map((option)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: option.value,\n                                                            children: option.label\n                                                        }, option.value, false, {\n                                                            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                            lineNumber: 277,\n                                                            columnNumber: 21\n                                                        }, undefined))\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                    lineNumber: 270,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                            lineNumber: 268,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                    className: \"block text-lg font-medium mb-2\",\n                                                    children: \"Mouth Animation\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                    lineNumber: 285,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                                    value: mouthAnimation,\n                                                    onChange: (e)=>handleMouthAnimationChange(e.target.value),\n                                                    className: \"w-full p-2 border border-gray-300 rounded-md\",\n                                                    disabled: expressionAnimation !== \"none\",\n                                                    children: mouthAnimationOptions.map((option)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                            value: option.value,\n                                                            children: option.label\n                                                        }, option.value, false, {\n                                                            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                            lineNumber: 293,\n                                                            columnNumber: 21\n                                                        }, undefined))\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                    lineNumber: 286,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                            lineNumber: 284,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                    lineNumber: 247,\n                                    columnNumber: 13\n                                }, undefined)\n                            }, void 0, false, {\n                                fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                lineNumber: 246,\n                                columnNumber: 11\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: randomize,\n                                className: \"w-full bg-indigo-600 text-white font-medium py-2 px-4 rounded-md hover:bg-indigo-700 transition-colors\",\n                                children: \"Randomize\"\n                            }, void 0, false, {\n                                fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                lineNumber: 303,\n                                columnNumber: 11\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                        lineNumber: 235,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"w-full md:w-2/3\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\",\n                            children: [\n                                Object.entries(optionMaps).map(([key, options])=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                        className: \"mb-4\",\n                                        children: [\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                                className: \"block text-sm font-medium text-gray-700 mb-1 capitalize\",\n                                                children: key.replace(/([A-Z])/g, \" $1\").trim()\n                                            }, void 0, false, {\n                                                fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                lineNumber: 317,\n                                                columnNumber: 17\n                                            }, undefined),\n                                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                                value: String(options[key]),\n                                                onChange: (e)=>{\n                                                    // If changing eyes manually, turn off eye animation\n                                                    if (key === \"eyes\" && eyeAnimation !== \"none\") {\n                                                        handleEyeAnimationChange(\"none\");\n                                                    }\n                                                    // If changing mouth manually, turn off mouth animation\n                                                    if (key === \"mouth\" && mouthAnimation !== \"none\") {\n                                                        handleMouthAnimationChange(\"none\");\n                                                    }\n                                                    // Type assertion as any to bypass strict type checking\n                                                    updateProp(key, e.target.value);\n                                                },\n                                                className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\",\n                                                disabled: key === \"eyes\" && eyeAnimation !== \"none\" || key === \"mouth\" && mouthAnimation !== \"none\",\n                                                children: options.map((option)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                        value: option.value,\n                                                        children: option.label\n                                                    }, option.value, false, {\n                                                        fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                        lineNumber: 338,\n                                                        columnNumber: 21\n                                                    }, undefined))\n                                            }, void 0, false, {\n                                                fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                lineNumber: 320,\n                                                columnNumber: 17\n                                            }, undefined),\n                                            key === \"eyes\" && eyeAnimation !== \"none\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"text-xs text-amber-600 mt-1\",\n                                                children: \"Controlled by eye animation\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                lineNumber: 344,\n                                                columnNumber: 19\n                                            }, undefined),\n                                            key === \"mouth\" && mouthAnimation !== \"none\" && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                                className: \"text-xs text-amber-600 mt-1\",\n                                                children: \"Controlled by mouth animation\"\n                                            }, void 0, false, {\n                                                fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                lineNumber: 349,\n                                                columnNumber: 19\n                                            }, undefined)\n                                        ]\n                                    }, key, true, {\n                                        fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                        lineNumber: 316,\n                                        columnNumber: 15\n                                    }, undefined)),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"mb-4\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                                            children: \"Lashes\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                            lineNumber: 358,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                            value: String(options.lashes),\n                                            onChange: (e)=>updateProp(\"lashes\", e.target.value === \"true\"),\n                                            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                    value: \"true\",\n                                                    children: \"Yes\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                    lineNumber: 364,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                    value: \"false\",\n                                                    children: \"No\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                    lineNumber: 365,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                            lineNumber: 359,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                    lineNumber: 357,\n                                    columnNumber: 13\n                                }, undefined),\n                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                                    className: \"mb-4\",\n                                    children: [\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"label\", {\n                                            className: \"block text-sm font-medium text-gray-700 mb-1\",\n                                            children: \"Face Mask\"\n                                        }, void 0, false, {\n                                            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                            lineNumber: 370,\n                                            columnNumber: 15\n                                        }, undefined),\n                                        /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"select\", {\n                                            value: String(options.faceMask),\n                                            onChange: (e)=>updateProp(\"faceMask\", e.target.value === \"true\"),\n                                            className: \"w-full p-2 border border-gray-300 rounded-md focus:ring-indigo-500 focus:border-indigo-500\",\n                                            children: [\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                    value: \"true\",\n                                                    children: \"Yes\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                    lineNumber: 376,\n                                                    columnNumber: 17\n                                                }, undefined),\n                                                /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"option\", {\n                                                    value: \"false\",\n                                                    children: \"No\"\n                                                }, void 0, false, {\n                                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                                    lineNumber: 377,\n                                                    columnNumber: 17\n                                                }, undefined)\n                                            ]\n                                        }, void 0, true, {\n                                            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                            lineNumber: 371,\n                                            columnNumber: 15\n                                        }, undefined)\n                                    ]\n                                }, void 0, true, {\n                                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                                    lineNumber: 369,\n                                    columnNumber: 13\n                                }, undefined)\n                            ]\n                        }, void 0, true, {\n                            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                            lineNumber: 313,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                        lineNumber: 312,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                lineNumber: 233,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                className: \"mt-8 bg-gray-100 p-4 rounded-md\",\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h2\", {\n                        className: \"text-xl font-medium mb-2\",\n                        children: \"Code\"\n                    }, void 0, false, {\n                        fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                        lineNumber: 386,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                        className: \"bg-gray-800 text-white p-4 rounded-md overflow-x-auto\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"code\", {\n                            children: reactCode\n                        }, void 0, false, {\n                            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                            lineNumber: 388,\n                            columnNumber: 11\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                        lineNumber: 387,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n                lineNumber: 385,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/BeanHeadVisualizer.tsx\",\n        lineNumber: 230,\n        columnNumber: 5\n    }, undefined);\n};\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (BeanHeadVisualizer);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/BeanHeadVisualizer.tsx\n");

/***/ }),

/***/ "./components/ModularBeanHead.tsx":
/*!****************************************!*\
  !*** ./components/ModularBeanHead.tsx ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ModularBeanHead: () => (/* binding */ ModularBeanHead)\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"react/jsx-dev-runtime\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var beanheads__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! beanheads */ \"beanheads\");\n/* harmony import */ var beanheads__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(beanheads__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _utils_cn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils/cn */ \"./utils/cn.ts\");\n/* harmony import */ var _hooks_useEyeAnimation__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../hooks/useEyeAnimation */ \"./hooks/useEyeAnimation.ts\");\n/* harmony import */ var _hooks_useMouthAnimation__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../hooks/useMouthAnimation */ \"./hooks/useMouthAnimation.ts\");\n/* harmony import */ var _hooks_useExpressionAnimation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../hooks/useExpressionAnimation */ \"./hooks/useExpressionAnimation.ts\");\n\n\n\n\n\n\n\nfunction ModularBeanHead({ avatarProps, eyeAnimation = \"none\", mouthAnimation = \"none\", expressionAnimation = \"none\", className, containerStyle = \"default\" }) {\n    // Use our custom hooks to get the current states\n    const eyeState = (0,_hooks_useEyeAnimation__WEBPACK_IMPORTED_MODULE_4__.useEyeAnimation)(eyeAnimation);\n    const mouthState = (0,_hooks_useMouthAnimation__WEBPACK_IMPORTED_MODULE_5__.useMouthAnimation)(mouthAnimation);\n    const expressionState = (0,_hooks_useExpressionAnimation__WEBPACK_IMPORTED_MODULE_6__.useExpressionAnimation)(expressionAnimation);\n    // Merge the current states with avatar props\n    const currentAvatarProps = (0,react__WEBPACK_IMPORTED_MODULE_1__.useMemo)(()=>{\n        // If expression animation is active, it overrides individual eye/mouth animations\n        if (expressionAnimation !== \"none\") {\n            return {\n                ...avatarProps,\n                eyes: expressionState.eyes,\n                eyebrows: expressionState.eyebrows,\n                mouth: expressionState.mouth\n            };\n        }\n        // Otherwise use individual eye/mouth animations\n        return {\n            ...avatarProps,\n            eyes: eyeState,\n            mouth: mouthState\n        };\n    }, [\n        avatarProps,\n        eyeState,\n        mouthState,\n        expressionAnimation,\n        expressionState\n    ]);\n    // For the avatar style used in CharacterCreationView\n    if (containerStyle === \"avatar\") {\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            className: (0,_utils_cn__WEBPACK_IMPORTED_MODULE_3__.cn)(\"relative\", className),\n            style: {\n                width: \"100%\",\n                height: \"100%\",\n                display: \"flex\",\n                alignItems: \"center\",\n                justifyContent: \"center\"\n            },\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    width: \"100%\",\n                    height: \"100%\",\n                    position: \"relative\"\n                },\n                children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n                    width: \"100%\",\n                    height: \"100%\",\n                    viewBox: \"0 0 300 300\",\n                    preserveAspectRatio: \"xMidYMid meet\",\n                    style: {\n                        overflow: \"visible\"\n                    },\n                    children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"g\", {\n                        transform: \"translate(40, 120) scale(0.75)\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(beanheads__WEBPACK_IMPORTED_MODULE_2__.BeanHead, {\n                            ...currentAvatarProps\n                        }, void 0, false, {\n                            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/ModularBeanHead.tsx\",\n                            lineNumber: 72,\n                            columnNumber: 15\n                        }, this)\n                    }, void 0, false, {\n                        fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/ModularBeanHead.tsx\",\n                        lineNumber: 71,\n                        columnNumber: 13\n                    }, this)\n                }, void 0, false, {\n                    fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/ModularBeanHead.tsx\",\n                    lineNumber: 64,\n                    columnNumber: 11\n                }, this)\n            }, void 0, false, {\n                fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/ModularBeanHead.tsx\",\n                lineNumber: 63,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/ModularBeanHead.tsx\",\n            lineNumber: 53,\n            columnNumber: 7\n        }, this);\n    }\n    // Default style used in CharacterSelectionPage\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: (0,_utils_cn__WEBPACK_IMPORTED_MODULE_3__.cn)(\"relative\", className),\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n            viewBox: \"0 0 1000 990\",\n            style: {\n                width: \"100%\",\n                height: \"100%\"\n            },\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(beanheads__WEBPACK_IMPORTED_MODULE_2__.BeanHead, {\n                ...currentAvatarProps\n            }, void 0, false, {\n                fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/ModularBeanHead.tsx\",\n                lineNumber: 87,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/ModularBeanHead.tsx\",\n            lineNumber: 83,\n            columnNumber: 7\n        }, this)\n    }, void 0, false, {\n        fileName: \"/Users/shubhajagannatha/Projects/tech/beanheads/beanheads-visualizer/components/ModularBeanHead.tsx\",\n        lineNumber: 82,\n        columnNumber: 5\n    }, this);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL01vZHVsYXJCZWFuSGVhZC50c3giLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQXVDO0FBQ1c7QUFDakI7QUFDNEM7QUFDTTtBQUNlO0FBVzNGLFNBQVNPLGdCQUFnQixFQUM5QkMsV0FBVyxFQUNYQyxlQUFlLE1BQU0sRUFDckJDLGlCQUFpQixNQUFNLEVBQ3ZCQyxzQkFBc0IsTUFBTSxFQUM1QkMsU0FBUyxFQUNUQyxpQkFBaUIsU0FBUyxFQUNMO0lBQ3JCLGlEQUFpRDtJQUNqRCxNQUFNQyxXQUFXVix1RUFBZUEsQ0FBQ0s7SUFDakMsTUFBTU0sYUFBYVYsMkVBQWlCQSxDQUFDSztJQUNyQyxNQUFNTSxrQkFBa0JWLHFGQUFzQkEsQ0FBQ0s7SUFFL0MsNkNBQTZDO0lBQzdDLE1BQU1NLHFCQUFxQmhCLDhDQUFPQSxDQUFDO1FBQ2pDLGtGQUFrRjtRQUNsRixJQUFJVSx3QkFBd0IsUUFBUTtZQUNsQyxPQUFPO2dCQUNMLEdBQUdILFdBQVc7Z0JBQ2RVLE1BQU1GLGdCQUFnQkUsSUFBSTtnQkFDMUJDLFVBQVVILGdCQUFnQkcsUUFBUTtnQkFDbENDLE9BQU9KLGdCQUFnQkksS0FBSztZQUM5QjtRQUNGO1FBRUEsZ0RBQWdEO1FBQ2hELE9BQU87WUFDTCxHQUFHWixXQUFXO1lBQ2RVLE1BQU1KO1lBQ05NLE9BQU9MO1FBQ1Q7SUFDRixHQUFHO1FBQUNQO1FBQWFNO1FBQVVDO1FBQVlKO1FBQXFCSztLQUFnQjtJQUU1RSxxREFBcUQ7SUFDckQsSUFBSUgsbUJBQW1CLFVBQVU7UUFDL0IscUJBQ0UsOERBQUNRO1lBQ0NULFdBQVdULDZDQUFFQSxDQUFDLFlBQVlTO1lBQzFCVSxPQUFPO2dCQUNMQyxPQUFPO2dCQUNQQyxRQUFRO2dCQUNSQyxTQUFTO2dCQUNUQyxZQUFZO2dCQUNaQyxnQkFBZ0I7WUFDbEI7c0JBRUEsNEVBQUNOO2dCQUFJQyxPQUFPO29CQUFFQyxPQUFPO29CQUFRQyxRQUFRO29CQUFRSSxVQUFVO2dCQUFXOzBCQUNoRSw0RUFBQ0M7b0JBQ0NOLE9BQU07b0JBQ05DLFFBQU87b0JBQ1BNLFNBQVE7b0JBQ1JDLHFCQUFvQjtvQkFDcEJULE9BQU87d0JBQUVVLFVBQVU7b0JBQVU7OEJBRTdCLDRFQUFDQzt3QkFBRUMsV0FBVTtrQ0FDWCw0RUFBQ2hDLCtDQUFRQTs0QkFBRSxHQUFHZSxrQkFBa0I7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBTTVDO0lBRUEsK0NBQStDO0lBQy9DLHFCQUNFLDhEQUFDSTtRQUFJVCxXQUFXVCw2Q0FBRUEsQ0FBQyxZQUFZUztrQkFDN0IsNEVBQUNpQjtZQUNDQyxTQUFRO1lBQ1JSLE9BQU87Z0JBQUVDLE9BQU87Z0JBQVFDLFFBQVE7WUFBTztzQkFFdkMsNEVBQUN0QiwrQ0FBUUE7Z0JBQUUsR0FBR2Usa0JBQWtCOzs7Ozs7Ozs7Ozs7Ozs7O0FBSXhDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmVhbmhlYWRzLXZpc3VhbGl6ZXIvLi9jb21wb25lbnRzL01vZHVsYXJCZWFuSGVhZC50c3g/YTBhMCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgdXNlTWVtbyB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgQmVhbkhlYWQsIEF2YXRhclByb3BzIH0gZnJvbSBcImJlYW5oZWFkc1wiO1xuaW1wb3J0IHsgY24gfSBmcm9tIFwiLi4vdXRpbHMvY25cIjtcbmltcG9ydCB7IHVzZUV5ZUFuaW1hdGlvbiwgRXllQW5pbWF0aW9uVHlwZSB9IGZyb20gXCIuLi9ob29rcy91c2VFeWVBbmltYXRpb25cIjtcbmltcG9ydCB7IHVzZU1vdXRoQW5pbWF0aW9uLCBNb3V0aEFuaW1hdGlvblR5cGUgfSBmcm9tIFwiLi4vaG9va3MvdXNlTW91dGhBbmltYXRpb25cIjtcbmltcG9ydCB7IHVzZUV4cHJlc3Npb25BbmltYXRpb24sIEV4cHJlc3Npb25BbmltYXRpb25UeXBlIH0gZnJvbSBcIi4uL2hvb2tzL3VzZUV4cHJlc3Npb25BbmltYXRpb25cIjtcblxuaW50ZXJmYWNlIE1vZHVsYXJCZWFuSGVhZFByb3BzIHtcbiAgYXZhdGFyUHJvcHM6IEF2YXRhclByb3BzO1xuICBleWVBbmltYXRpb24/OiBFeWVBbmltYXRpb25UeXBlO1xuICBtb3V0aEFuaW1hdGlvbj86IE1vdXRoQW5pbWF0aW9uVHlwZTtcbiAgZXhwcmVzc2lvbkFuaW1hdGlvbj86IEV4cHJlc3Npb25BbmltYXRpb25UeXBlO1xuICBjbGFzc05hbWU/OiBzdHJpbmc7XG4gIGNvbnRhaW5lclN0eWxlPzogXCJkZWZhdWx0XCIgfCBcImF2YXRhclwiO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gTW9kdWxhckJlYW5IZWFkKHtcbiAgYXZhdGFyUHJvcHMsXG4gIGV5ZUFuaW1hdGlvbiA9IFwibm9uZVwiLFxuICBtb3V0aEFuaW1hdGlvbiA9IFwibm9uZVwiLFxuICBleHByZXNzaW9uQW5pbWF0aW9uID0gXCJub25lXCIsXG4gIGNsYXNzTmFtZSxcbiAgY29udGFpbmVyU3R5bGUgPSBcImRlZmF1bHRcIlxufTogTW9kdWxhckJlYW5IZWFkUHJvcHMpIHtcbiAgLy8gVXNlIG91ciBjdXN0b20gaG9va3MgdG8gZ2V0IHRoZSBjdXJyZW50IHN0YXRlc1xuICBjb25zdCBleWVTdGF0ZSA9IHVzZUV5ZUFuaW1hdGlvbihleWVBbmltYXRpb24pO1xuICBjb25zdCBtb3V0aFN0YXRlID0gdXNlTW91dGhBbmltYXRpb24obW91dGhBbmltYXRpb24pO1xuICBjb25zdCBleHByZXNzaW9uU3RhdGUgPSB1c2VFeHByZXNzaW9uQW5pbWF0aW9uKGV4cHJlc3Npb25BbmltYXRpb24pO1xuICBcbiAgLy8gTWVyZ2UgdGhlIGN1cnJlbnQgc3RhdGVzIHdpdGggYXZhdGFyIHByb3BzXG4gIGNvbnN0IGN1cnJlbnRBdmF0YXJQcm9wcyA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIC8vIElmIGV4cHJlc3Npb24gYW5pbWF0aW9uIGlzIGFjdGl2ZSwgaXQgb3ZlcnJpZGVzIGluZGl2aWR1YWwgZXllL21vdXRoIGFuaW1hdGlvbnNcbiAgICBpZiAoZXhwcmVzc2lvbkFuaW1hdGlvbiAhPT0gXCJub25lXCIpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC4uLmF2YXRhclByb3BzLFxuICAgICAgICBleWVzOiBleHByZXNzaW9uU3RhdGUuZXllcyxcbiAgICAgICAgZXllYnJvd3M6IGV4cHJlc3Npb25TdGF0ZS5leWVicm93cyxcbiAgICAgICAgbW91dGg6IGV4cHJlc3Npb25TdGF0ZS5tb3V0aCxcbiAgICAgIH07XG4gICAgfVxuICAgIFxuICAgIC8vIE90aGVyd2lzZSB1c2UgaW5kaXZpZHVhbCBleWUvbW91dGggYW5pbWF0aW9uc1xuICAgIHJldHVybiB7XG4gICAgICAuLi5hdmF0YXJQcm9wcyxcbiAgICAgIGV5ZXM6IGV5ZVN0YXRlLFxuICAgICAgbW91dGg6IG1vdXRoU3RhdGUsXG4gICAgfTtcbiAgfSwgW2F2YXRhclByb3BzLCBleWVTdGF0ZSwgbW91dGhTdGF0ZSwgZXhwcmVzc2lvbkFuaW1hdGlvbiwgZXhwcmVzc2lvblN0YXRlXSk7XG5cbiAgLy8gRm9yIHRoZSBhdmF0YXIgc3R5bGUgdXNlZCBpbiBDaGFyYWN0ZXJDcmVhdGlvblZpZXdcbiAgaWYgKGNvbnRhaW5lclN0eWxlID09PSBcImF2YXRhclwiKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXZcbiAgICAgICAgY2xhc3NOYW1lPXtjbihcInJlbGF0aXZlXCIsIGNsYXNzTmFtZSl9XG4gICAgICAgIHN0eWxlPXt7XG4gICAgICAgICAgd2lkdGg6IFwiMTAwJVwiLFxuICAgICAgICAgIGhlaWdodDogXCIxMDAlXCIsXG4gICAgICAgICAgZGlzcGxheTogXCJmbGV4XCIsXG4gICAgICAgICAgYWxpZ25JdGVtczogXCJjZW50ZXJcIixcbiAgICAgICAgICBqdXN0aWZ5Q29udGVudDogXCJjZW50ZXJcIixcbiAgICAgICAgfX1cbiAgICAgID5cbiAgICAgICAgPGRpdiBzdHlsZT17eyB3aWR0aDogXCIxMDAlXCIsIGhlaWdodDogXCIxMDAlXCIsIHBvc2l0aW9uOiBcInJlbGF0aXZlXCIgfX0+XG4gICAgICAgICAgPHN2Z1xuICAgICAgICAgICAgd2lkdGg9XCIxMDAlXCJcbiAgICAgICAgICAgIGhlaWdodD1cIjEwMCVcIlxuICAgICAgICAgICAgdmlld0JveD1cIjAgMCAzMDAgMzAwXCJcbiAgICAgICAgICAgIHByZXNlcnZlQXNwZWN0UmF0aW89XCJ4TWlkWU1pZCBtZWV0XCJcbiAgICAgICAgICAgIHN0eWxlPXt7IG92ZXJmbG93OiBcInZpc2libGVcIiB9fVxuICAgICAgICAgID5cbiAgICAgICAgICAgIDxnIHRyYW5zZm9ybT1cInRyYW5zbGF0ZSg0MCwgMTIwKSBzY2FsZSgwLjc1KVwiPlxuICAgICAgICAgICAgICA8QmVhbkhlYWQgey4uLmN1cnJlbnRBdmF0YXJQcm9wc30gLz5cbiAgICAgICAgICAgIDwvZz5cbiAgICAgICAgICA8L3N2Zz5cbiAgICAgICAgPC9kaXY+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9XG4gIFxuICAvLyBEZWZhdWx0IHN0eWxlIHVzZWQgaW4gQ2hhcmFjdGVyU2VsZWN0aW9uUGFnZVxuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtjbihcInJlbGF0aXZlXCIsIGNsYXNzTmFtZSl9PlxuICAgICAgPHN2Z1xuICAgICAgICB2aWV3Qm94PVwiMCAwIDEwMDAgOTkwXCJcbiAgICAgICAgc3R5bGU9e3sgd2lkdGg6IFwiMTAwJVwiLCBoZWlnaHQ6IFwiMTAwJVwiIH19XG4gICAgICA+XG4gICAgICAgIDxCZWFuSGVhZCB7Li4uY3VycmVudEF2YXRhclByb3BzfSAvPlxuICAgICAgPC9zdmc+XG4gICAgPC9kaXY+XG4gICk7XG59ICJdLCJuYW1lcyI6WyJSZWFjdCIsInVzZU1lbW8iLCJCZWFuSGVhZCIsImNuIiwidXNlRXllQW5pbWF0aW9uIiwidXNlTW91dGhBbmltYXRpb24iLCJ1c2VFeHByZXNzaW9uQW5pbWF0aW9uIiwiTW9kdWxhckJlYW5IZWFkIiwiYXZhdGFyUHJvcHMiLCJleWVBbmltYXRpb24iLCJtb3V0aEFuaW1hdGlvbiIsImV4cHJlc3Npb25BbmltYXRpb24iLCJjbGFzc05hbWUiLCJjb250YWluZXJTdHlsZSIsImV5ZVN0YXRlIiwibW91dGhTdGF0ZSIsImV4cHJlc3Npb25TdGF0ZSIsImN1cnJlbnRBdmF0YXJQcm9wcyIsImV5ZXMiLCJleWVicm93cyIsIm1vdXRoIiwiZGl2Iiwic3R5bGUiLCJ3aWR0aCIsImhlaWdodCIsImRpc3BsYXkiLCJhbGlnbkl0ZW1zIiwianVzdGlmeUNvbnRlbnQiLCJwb3NpdGlvbiIsInN2ZyIsInZpZXdCb3giLCJwcmVzZXJ2ZUFzcGVjdFJhdGlvIiwib3ZlcmZsb3ciLCJnIiwidHJhbnNmb3JtIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/ModularBeanHead.tsx\n");

/***/ }),

/***/ "./hooks/useExpressionAnimation.ts":
/*!*****************************************!*\
  !*** ./hooks/useExpressionAnimation.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useExpressionAnimation: () => (/* binding */ useExpressionAnimation)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n// Helper to determine if an eye state is considered \"open\" and should blink\nconst isOpenEyeState = (eyeState)=>{\n    const openEyeStates = [\n        \"normal\",\n        \"squint\",\n        \"simple\",\n        \"heart\"\n    ];\n    return openEyeStates.includes(eyeState);\n};\n// Helper to determine if the animation includes talking\nconst isTalkingAnimation = (animationType)=>{\n    return animationType.endsWith(\"Talk\");\n};\n// Helper to get the base expression for a talking animation\nconst getBaseExpressionType = (animationType)=>{\n    if (isTalkingAnimation(animationType)) {\n        // Remove \"Talk\" from the end to get the base expression\n        return animationType.slice(0, -4);\n    }\n    return animationType;\n};\n// Function to get the appropriate talking mouth state based on the expression\nconst getTalkingMouthState = (baseExpression, expressionType)=>{\n    // Special cases for specific expression types\n    if (expressionType === \"failure\" || expressionType === \"mildFailure\") {\n        return \"open\"; // Always use fully open mouth for failure talking to make it more visible\n    }\n    // Map each expression's mouth type to an appropriate talking mouth\n    switch(baseExpression.mouth){\n        case \"grin\":\n        case \"openSmile\":\n            return \"openSmile\"; // Happy talking\n        case \"sad\":\n            return \"open\"; // Sad talking (alternates with sad)\n        case \"open\":\n            return \"open\"; // Already open for talking\n        case \"serious\":\n        case \"lips\":\n            return \"open\"; // Default talking mouth\n        case \"tongue\":\n            return \"openSmile\"; // Replace tongue with open smile for talking\n        default:\n            return \"open\"; // Default to open mouth for talking\n    }\n};\n// Function to get the closed mouth state for talking animation based on the expression\nconst getClosedMouthState = (baseExpression, expressionType)=>{\n    // Map each expression's mouth type to an appropriate closed mouth state\n    switch(baseExpression.mouth){\n        case \"grin\":\n            return \"grin\"; // Return to grin when mouth closes\n        case \"openSmile\":\n            return \"grin\"; // Close to grin from open smile\n        case \"sad\":\n            // Special case for failure expressions - they should use serious instead of sad for the closed state\n            if (expressionType === \"failure\" || expressionType === \"mildFailure\") {\n                return \"serious\"; // Use serious for failure expressions\n            }\n            return \"sad\"; // Stay sad for other sad expressions\n        case \"open\":\n            return \"serious\"; // Close to serious from open\n        case \"serious\":\n            return \"serious\"; // Stay serious\n        case \"lips\":\n            return \"lips\"; // Stay with lips\n        case \"tongue\":\n            return \"grin\"; // Close to grin from tongue\n        default:\n            return \"serious\"; // Default closed mouth\n    }\n};\n// Predefined base expressions\nconst expressions = {\n    godlikeSuccess: {\n        eyes: \"heart\",\n        eyebrows: \"raised\",\n        mouth: \"openSmile\"\n    },\n    greatSuccess: {\n        eyes: \"happy\",\n        eyebrows: \"raised\",\n        mouth: \"grin\"\n    },\n    success: {\n        eyes: \"content\",\n        eyebrows: \"raised\",\n        mouth: \"openSmile\"\n    },\n    mildSuccess: {\n        eyes: \"normal\",\n        eyebrows: \"raised\",\n        mouth: \"grin\"\n    },\n    neutral: {\n        eyes: \"normal\",\n        eyebrows: \"serious\",\n        mouth: \"serious\"\n    },\n    mildFailure: {\n        eyes: \"normal\",\n        eyebrows: \"concerned\",\n        mouth: \"sad\"\n    },\n    failure: {\n        eyes: \"squint\",\n        eyebrows: \"angry\",\n        mouth: \"sad\"\n    },\n    terribleFailure: {\n        eyes: \"dizzy\",\n        eyebrows: \"angry\",\n        mouth: \"open\"\n    },\n    tragicFailure: {\n        eyes: \"dizzy\",\n        eyebrows: \"angry\",\n        mouth: \"open\"\n    },\n    happy: {\n        eyes: \"content\",\n        eyebrows: \"raised\",\n        mouth: \"grin\"\n    },\n    sad: {\n        eyes: \"normal\",\n        eyebrows: \"concerned\",\n        mouth: \"sad\"\n    },\n    angry: {\n        eyes: \"squint\",\n        eyebrows: \"angry\",\n        mouth: \"serious\"\n    },\n    surprised: {\n        eyes: \"normal\",\n        eyebrows: \"raised\",\n        mouth: \"open\"\n    },\n    confused: {\n        eyes: \"normal\",\n        eyebrows: \"leftLowered\",\n        mouth: \"serious\"\n    },\n    excited: {\n        eyes: \"happy\",\n        eyebrows: \"raised\",\n        mouth: \"openSmile\"\n    },\n    love: {\n        eyes: \"heart\",\n        eyebrows: \"raised\",\n        mouth: \"openSmile\"\n    },\n    shocked: {\n        eyes: \"dizzy\",\n        eyebrows: \"raised\",\n        mouth: \"open\"\n    }\n};\n/**\n * Custom hook for expression animations\n * \n * @param animationType - Type of expression animation to perform\n * @returns Current expression state that should be applied to the BeanHead\n */ function useExpressionAnimation(animationType = \"none\") {\n    const [expressionState, setExpressionState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(expressions.neutral);\n    const timeoutRefs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    const isFirstRender = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(true);\n    const finalExpressionRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    const isTalkingRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(false);\n    const talkingIntervalRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Helper to add timeouts to the ref array for later cleanup\n        const addTimeout = (callback, ms)=>{\n            const timeout = setTimeout(callback, ms);\n            timeoutRefs.current.push(timeout);\n            return timeout;\n        };\n        // Clear existing timeouts when animation type changes\n        timeoutRefs.current.forEach((timeout)=>clearTimeout(timeout));\n        timeoutRefs.current = [];\n        // Clear any talking interval\n        if (talkingIntervalRef.current) {\n            clearInterval(talkingIntervalRef.current);\n            talkingIntervalRef.current = null;\n        }\n        // Reset state when animation type changes\n        setExpressionState(expressions.neutral);\n        if (animationType === \"none\") {\n            return;\n        }\n        // Check if this is a talking animation\n        isTalkingRef.current = isTalkingAnimation(animationType);\n        // Get the base expression type (without \"Talk\" suffix if present)\n        const baseExpressionType = getBaseExpressionType(animationType);\n        // Get target expression based on animation type\n        const targetExpression = expressions[baseExpressionType] || expressions.neutral;\n        finalExpressionRef.current = targetExpression;\n        // Add talking animation if this is a talking expression\n        const addTalkingEffect = (finalState)=>{\n            if (!isTalkingRef.current) return;\n            // Get the appropriate mouth states for this expression\n            const talkingMouth = getTalkingMouthState(finalState, baseExpressionType);\n            const closedMouth = getClosedMouthState(finalState, baseExpressionType);\n            // Special case for failure expressions - need more pronounced mouth movements\n            const isFailureExpression = baseExpressionType === \"failure\" || baseExpressionType === \"mildFailure\";\n            // Function to toggle between talking and closed mouth\n            const performMouthMovement = ()=>{\n                // Toggle mouth state\n                setExpressionState((prevState)=>{\n                    const isCurrentlyOpen = prevState.mouth === talkingMouth;\n                    // For failure expressions, make the open state longer than closed state\n                    if (isFailureExpression && !isCurrentlyOpen) {\n                        // When moving to open state for failures, add a slightly longer duration\n                        setTimeout(()=>{\n                            setExpressionState((prevState)=>({\n                                    ...prevState,\n                                    mouth: closedMouth\n                                }));\n                        }, 300); // Even longer duration for open mouth in failure states\n                        return {\n                            ...prevState,\n                            mouth: talkingMouth\n                        };\n                    }\n                    return {\n                        ...prevState,\n                        mouth: isCurrentlyOpen ? closedMouth : talkingMouth\n                    };\n                });\n            };\n            // Start talking animation with irregular intervals for natural speech\n            const talkingInterval = setInterval(()=>{\n                performMouthMovement();\n                // Randomly adjust the interval timing for more natural speech\n                if (Math.random() > 0.7) {\n                    if (talkingIntervalRef.current) {\n                        clearInterval(talkingIntervalRef.current);\n                        // Create a new interval with slight timing variation\n                        talkingIntervalRef.current = setInterval(performMouthMovement, 100 + Math.random() * 100); // 100-200ms variation for more noticeable mouth movement\n                    }\n                }\n            }, 150); // Slightly slower base talking speed for more visible movements\n            talkingIntervalRef.current = talkingInterval;\n            timeoutRefs.current.push(talkingInterval);\n        };\n        // Add blinking animation for expressions with open eyes\n        const addBlinkingEffect = (finalState)=>{\n            // Only add blinking for open eye states\n            if (!isOpenEyeState(finalState.eyes)) return;\n            // Blinking cycle that keeps the same eyebrows and mouth\n            const performBlinkCycle = ()=>{\n                // First blink - squint\n                setExpressionState((prevState)=>({\n                        ...prevState,\n                        eyes: \"squint\"\n                    }));\n                // Then close\n                addTimeout(()=>{\n                    setExpressionState((prevState)=>({\n                            ...prevState,\n                            eyes: \"content\"\n                        }));\n                    // Return to original eye state\n                    addTimeout(()=>{\n                        setExpressionState((prevState)=>({\n                                ...prevState,\n                                eyes: finalState.eyes\n                            }));\n                    }, 80); // Time with eyes fully closed\n                }, 70); // Time with eyes squinted\n            };\n            // Set up recurring blink cycles with random intervals\n            const setupRecurringBlinks = ()=>{\n                performBlinkCycle();\n                // Schedule next blink cycle with a random delay\n                addTimeout(setupRecurringBlinks, 4000 + Math.random() * 2000); // 4-6 seconds between blinks\n            };\n            // Start the first blink cycle after a delay\n            addTimeout(setupRecurringBlinks, 2000 + Math.random() * 1000);\n        };\n        // Setup animation flow - common function for both regular and talking animations\n        const setupExpressionAnimation = ()=>{\n            // Schedule animation flow based on expression type (without \"Talk\" suffix)\n            switch(baseExpressionType){\n                case \"godlikeSuccess\":\n                    // Start with neutral expression\n                    setExpressionState(expressions.neutral);\n                    // Transition to surprised\n                    addTimeout(()=>{\n                        setExpressionState(expressions.surprised);\n                        // Then to excited\n                        addTimeout(()=>{\n                            setExpressionState(expressions.excited);\n                            // Finally to godlike success\n                            addTimeout(()=>{\n                                setExpressionState(expressions.godlikeSuccess);\n                                // Add talking if this is a talking animation\n                                addTalkingEffect(expressions.godlikeSuccess);\n                                // Add some dynamic movement at the end\n                                addTimeout(()=>{\n                                    // Blink hearts\n                                    setExpressionState((prevState)=>({\n                                            ...prevState,\n                                            eyes: \"content\"\n                                        }));\n                                    addTimeout(()=>{\n                                        setExpressionState((prevState)=>({\n                                                ...prevState,\n                                                eyes: \"heart\"\n                                            }));\n                                        // Add blinking for heart eyes if not talking\n                                        if (!isTalkingRef.current) {\n                                            addTimeout(()=>{\n                                                addBlinkingEffect(expressions.godlikeSuccess);\n                                            }, 1000);\n                                        }\n                                    }, 150);\n                                }, 1200);\n                            }, 400);\n                        }, 400);\n                    }, 400);\n                    break;\n                case \"greatSuccess\":\n                    // Start with neutral expression\n                    setExpressionState(expressions.neutral);\n                    // Transition to mild success\n                    addTimeout(()=>{\n                        setExpressionState(expressions.mildSuccess);\n                        // Then to great success\n                        addTimeout(()=>{\n                            setExpressionState(expressions.greatSuccess);\n                            // Add talking if this is a talking animation\n                            addTalkingEffect(expressions.greatSuccess);\n                            // Add a little dynamic eye movement\n                            addTimeout(()=>{\n                                setExpressionState((prevState)=>({\n                                        ...prevState,\n                                        eyes: \"content\"\n                                    }));\n                                addTimeout(()=>{\n                                    setExpressionState((prevState)=>({\n                                            ...prevState,\n                                            eyes: \"happy\"\n                                        }));\n                                    // Add blinking if not talking\n                                    if (!isTalkingRef.current) {\n                                        addTimeout(()=>{\n                                            addBlinkingEffect(expressions.greatSuccess);\n                                        }, 500);\n                                    }\n                                }, 300);\n                            }, 1000);\n                        }, 500);\n                    }, 400);\n                    break;\n                case \"success\":\n                    // Start with neutral expression\n                    setExpressionState(expressions.neutral);\n                    // Go directly to success with a subtle transition\n                    addTimeout(()=>{\n                        setExpressionState({\n                            ...expressions.neutral,\n                            eyebrows: \"raised\"\n                        });\n                        addTimeout(()=>{\n                            setExpressionState(expressions.success);\n                            // Add talking if this is a talking animation\n                            addTalkingEffect(expressions.success);\n                            // Add blinking after a delay if not talking\n                            if (!isTalkingRef.current) {\n                                addTimeout(()=>{\n                                    addBlinkingEffect(expressions.success);\n                                }, 800);\n                            }\n                        }, 300);\n                    }, 300);\n                    break;\n                case \"mildSuccess\":\n                    // Simple transition from neutral to mild success\n                    setExpressionState(expressions.neutral);\n                    addTimeout(()=>{\n                        setExpressionState(expressions.mildSuccess);\n                        // Add talking if this is a talking animation\n                        addTalkingEffect(expressions.mildSuccess);\n                        // Add blinking after it settles if not talking\n                        if (!isTalkingRef.current) {\n                            addTimeout(()=>{\n                                addBlinkingEffect(expressions.mildSuccess);\n                            }, 800);\n                        }\n                    }, 400);\n                    break;\n                case \"neutral\":\n                    // Just set to neutral\n                    setExpressionState(expressions.neutral);\n                    // Add talking if this is a talking animation\n                    addTalkingEffect(expressions.neutral);\n                    // Add blinking after it settles if not talking\n                    if (!isTalkingRef.current) {\n                        addTimeout(()=>{\n                            addBlinkingEffect(expressions.neutral);\n                        }, 800);\n                    }\n                    break;\n                case \"mildFailure\":\n                    // Start with neutral expression\n                    setExpressionState(expressions.neutral);\n                    // Go to mild concern\n                    addTimeout(()=>{\n                        setExpressionState({\n                            ...expressions.neutral,\n                            eyebrows: \"concerned\"\n                        });\n                        // Complete transition to mild failure\n                        addTimeout(()=>{\n                            setExpressionState(expressions.mildFailure);\n                            // Add talking if this is a talking animation\n                            addTalkingEffect(expressions.mildFailure);\n                            // Add blinking after it settles if not talking\n                            if (!isTalkingRef.current) {\n                                addTimeout(()=>{\n                                    addBlinkingEffect(expressions.mildFailure);\n                                }, 800);\n                            }\n                        }, 300);\n                    }, 400);\n                    break;\n                case \"failure\":\n                    // Start with mild failure\n                    setExpressionState(expressions.mildFailure);\n                    // Transition to full failure\n                    addTimeout(()=>{\n                        setExpressionState(expressions.failure);\n                        // Add talking if this is a talking animation\n                        addTalkingEffect(expressions.failure);\n                        // Add blinking after it settles if not talking\n                        if (!isTalkingRef.current) {\n                            addTimeout(()=>{\n                                addBlinkingEffect(expressions.failure);\n                            }, 800);\n                        }\n                    }, 500);\n                    break;\n                case \"terribleFailure\":\n                    // Start with failure\n                    setExpressionState(expressions.failure);\n                    // First eye twitch\n                    addTimeout(()=>{\n                        setExpressionState({\n                            ...expressions.failure,\n                            eyes: \"normal\"\n                        });\n                        // Start transition to terrible\n                        addTimeout(()=>{\n                            setExpressionState({\n                                ...expressions.failure,\n                                mouth: \"open\"\n                            });\n                            // Complete transition to terrible failure\n                            addTimeout(()=>{\n                                setExpressionState(expressions.terribleFailure);\n                                // Add talking if this is a talking animation\n                                addTalkingEffect(expressions.terribleFailure);\n                            // Dizzy eyes don't blink\n                            }, 200);\n                        }, 200);\n                    }, 400);\n                    break;\n                case \"tragicFailure\":\n                    // Similar to terrible but with more dramatic lead-in\n                    setExpressionState(expressions.neutral);\n                    // Shocked expression first\n                    addTimeout(()=>{\n                        setExpressionState(expressions.shocked);\n                        // Then transition to tragic failure\n                        addTimeout(()=>{\n                            setExpressionState(expressions.tragicFailure);\n                            // Add talking if this is a talking animation\n                            addTalkingEffect(expressions.tragicFailure);\n                        // Dizzy eyes don't blink\n                        }, 600);\n                    }, 300);\n                    break;\n                case \"happy\":\n                    // Simple happy animation\n                    setExpressionState(expressions.neutral);\n                    addTimeout(()=>{\n                        setExpressionState(expressions.happy);\n                        // Add talking if this is a talking animation\n                        addTalkingEffect(expressions.happy);\n                        // Add blinking after it settles if not talking\n                        if (!isTalkingRef.current) {\n                            addTimeout(()=>{\n                                addBlinkingEffect(expressions.happy);\n                            }, 800);\n                        }\n                    }, 300);\n                    break;\n                case \"sad\":\n                    // Simple sad animation\n                    setExpressionState(expressions.neutral);\n                    addTimeout(()=>{\n                        setExpressionState(expressions.sad);\n                        // Add talking if this is a talking animation\n                        addTalkingEffect(expressions.sad);\n                        // Add blinking after it settles if not talking\n                        if (!isTalkingRef.current) {\n                            addTimeout(()=>{\n                                addBlinkingEffect(expressions.sad);\n                            }, 800);\n                        }\n                    }, 300);\n                    break;\n                case \"angry\":\n                    // Transition to angry with a build-up\n                    setExpressionState(expressions.neutral);\n                    // First eyebrows\n                    addTimeout(()=>{\n                        setExpressionState({\n                            ...expressions.neutral,\n                            eyebrows: \"angry\"\n                        });\n                        // Then eyes\n                        addTimeout(()=>{\n                            setExpressionState({\n                                ...expressions.neutral,\n                                eyebrows: \"angry\",\n                                eyes: \"squint\"\n                            });\n                            // Complete angry expression\n                            addTimeout(()=>{\n                                setExpressionState(expressions.angry);\n                                // Add talking if this is a talking animation\n                                addTalkingEffect(expressions.angry);\n                                // Add blinking after it settles if not talking\n                                if (!isTalkingRef.current) {\n                                    addTimeout(()=>{\n                                        addBlinkingEffect(expressions.angry);\n                                    }, 800);\n                                }\n                            }, 200);\n                        }, 200);\n                    }, 300);\n                    break;\n                case \"surprised\":\n                    // Quick surprise reaction\n                    setExpressionState(expressions.neutral);\n                    addTimeout(()=>{\n                        setExpressionState(expressions.surprised);\n                        // Add talking if this is a talking animation\n                        addTalkingEffect(expressions.surprised);\n                        // Add blinking after it settles if not talking\n                        if (!isTalkingRef.current) {\n                            addTimeout(()=>{\n                                addBlinkingEffect(expressions.surprised);\n                            }, 800);\n                        }\n                    }, 200);\n                    break;\n                case \"confused\":\n                    // Transition to confused\n                    setExpressionState(expressions.neutral);\n                    addTimeout(()=>{\n                        setExpressionState({\n                            ...expressions.neutral,\n                            eyebrows: \"leftLowered\"\n                        });\n                        addTimeout(()=>{\n                            setExpressionState(expressions.confused);\n                            // Add talking if this is a talking animation\n                            addTalkingEffect(expressions.confused);\n                            // Add blinking after it settles if not talking\n                            if (!isTalkingRef.current) {\n                                addTimeout(()=>{\n                                    addBlinkingEffect(expressions.confused);\n                                }, 800);\n                            }\n                        }, 300);\n                    }, 300);\n                    break;\n                case \"excited\":\n                    // Build up to excited\n                    setExpressionState(expressions.happy);\n                    addTimeout(()=>{\n                        setExpressionState(expressions.excited);\n                        // Add talking if this is a talking animation\n                        addTalkingEffect(expressions.excited);\n                    // No blinking for happy eyes\n                    }, 400);\n                    break;\n                case \"love\":\n                    // Transition to love\n                    setExpressionState(expressions.happy);\n                    addTimeout(()=>{\n                        setExpressionState(expressions.love);\n                        // Add talking if this is a talking animation\n                        addTalkingEffect(expressions.love);\n                        // Add blinking after it settles (for heart eyes) if not talking\n                        if (!isTalkingRef.current) {\n                            addTimeout(()=>{\n                                addBlinkingEffect(expressions.love);\n                            }, 800);\n                        }\n                    }, 400);\n                    break;\n                case \"shocked\":\n                    // Quick shock reaction\n                    setExpressionState(expressions.neutral);\n                    addTimeout(()=>{\n                        setExpressionState(expressions.shocked);\n                        // Add talking if this is a talking animation\n                        addTalkingEffect(expressions.shocked);\n                    // Dizzy eyes don't blink\n                    }, 200);\n                    break;\n                default:\n                    // For any undefined animations, just set the corresponding expression\n                    if (expressions[baseExpressionType]) {\n                        setExpressionState(expressions[baseExpressionType]);\n                        // Add talking if this is a talking animation\n                        addTalkingEffect(expressions[baseExpressionType]);\n                        // Add blinking after a delay if the eyes are open and not talking\n                        if (!isTalkingRef.current) {\n                            addTimeout(()=>{\n                                if (expressions[baseExpressionType] && isOpenEyeState(expressions[baseExpressionType].eyes)) {\n                                    addBlinkingEffect(expressions[baseExpressionType]);\n                                }\n                            }, 800);\n                        }\n                    } else {\n                        setExpressionState(expressions.neutral);\n                        // Add talking if this is a talking animation\n                        addTalkingEffect(expressions.neutral);\n                        // Add blinking for neutral if not talking\n                        if (!isTalkingRef.current) {\n                            addTimeout(()=>{\n                                addBlinkingEffect(expressions.neutral);\n                            }, 800);\n                        }\n                    }\n            }\n        };\n        // Start the expression animation\n        setupExpressionAnimation();\n        // Cleanup all timeouts and intervals on unmount or when animation type changes\n        return ()=>{\n            timeoutRefs.current.forEach((timeout)=>clearTimeout(timeout));\n            timeoutRefs.current = [];\n            if (talkingIntervalRef.current) {\n                clearInterval(talkingIntervalRef.current);\n                talkingIntervalRef.current = null;\n            }\n        };\n    }, [\n        animationType\n    ]);\n    return expressionState;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./hooks/useExpressionAnimation.ts\n");

/***/ }),

/***/ "./hooks/useEyeAnimation.ts":
/*!**********************************!*\
  !*** ./hooks/useEyeAnimation.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useEyeAnimation: () => (/* binding */ useEyeAnimation)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Custom hook for eye animations\n * \n * @param animationType - Type of eye animation to perform\n * @returns Current eye state that should be applied to the BeanHead\n */ function useEyeAnimation(animationType = \"none\") {\n    const [eyeState, setEyeState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"normal\");\n    const timeoutRefs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Helper to add timeouts to the ref array for later cleanup\n        const addTimeout = (callback, ms)=>{\n            const timeout = setTimeout(callback, ms);\n            timeoutRefs.current.push(timeout);\n            return timeout;\n        };\n        // Clear existing timeouts when animation type changes\n        timeoutRefs.current.forEach((timeout)=>clearTimeout(timeout));\n        timeoutRefs.current = [];\n        // Reset state when animation type changes\n        setEyeState(\"normal\");\n        if (animationType === \"none\") {\n            return;\n        }\n        if (animationType === \"blink\") {\n            // Function to handle one complete blink cycle\n            const performBlinkCycle = ()=>{\n                // First blink\n                setEyeState(\"squint\");\n                addTimeout(()=>{\n                    setEyeState(\"content\");\n                    addTimeout(()=>{\n                        setEyeState(\"normal\");\n                        // Small pause before second blink\n                        addTimeout(()=>{\n                            // Second blink\n                            setEyeState(\"squint\");\n                            addTimeout(()=>{\n                                setEyeState(\"content\");\n                                addTimeout(()=>{\n                                    setEyeState(\"normal\");\n                                }, 80); // Time with eyes fully closed (second blink)\n                            }, 70); // Time with eyes squinted (second blink)\n                        }, 200 + (Math.random() + 1) * 100); // Variable pause between blinks\n                    }, 80); // Time with eyes fully closed (first blink)\n                }, 70); // Time with eyes squinted (first blink)\n            };\n            // Initial delay before starting the animation\n            const initialDelay = addTimeout(()=>{\n                // Initial blink cycle\n                performBlinkCycle();\n                // Set up recurring blink cycles with random intervals\n                const intervalId = setInterval(()=>{\n                    performBlinkCycle();\n                }, 4000 + Math.random() * 2000); // Random interval between 4-6 seconds\n                // Store interval for cleanup\n                const intervalTimeout = {\n                    unref: ()=>clearInterval(intervalId)\n                };\n                timeoutRefs.current.push(intervalTimeout);\n            }, 1000 + Math.random() * 1500); // Random initial delay\n        }\n        if (animationType === \"leftTwitch\") {\n            // Function to handle one normal moment cycle\n            const performNormalMomentCycle = ()=>{\n                // Switch to normal eyes\n                setEyeState(\"normal\");\n                // Stay in normal state for longer (800-1200ms)\n                addTimeout(()=>{\n                    // Switch back to twitching\n                    setEyeState(\"leftTwitch\");\n                    // Stay in leftTwitch state briefly (300-500ms)\n                    addTimeout(()=>{\n                        // Back to normal for another period\n                        setEyeState(\"normal\");\n                        // Stay in normal state again (700-1000ms)\n                        addTimeout(()=>{\n                            // Another brief twitch\n                            setEyeState(\"leftTwitch\");\n                            // Sometimes add a third normal moment\n                            if (Math.random() > 0.4) {\n                                addTimeout(()=>{\n                                    setEyeState(\"normal\");\n                                    // Stay in normal state again (600-900ms)\n                                    addTimeout(()=>{\n                                        setEyeState(\"leftTwitch\");\n                                    }, 600 + Math.random() * 300);\n                                }, 200 + Math.random() * 100);\n                            }\n                        }, 700 + Math.random() * 300);\n                    }, 300 + Math.random() * 200);\n                }, 800 + Math.random() * 400);\n            };\n            // Set initial state to leftTwitch\n            setEyeState(\"leftTwitch\");\n            // Initial delay before first cycle\n            const initialDelay = addTimeout(()=>{\n                // Initial cycle\n                performNormalMomentCycle();\n                // Set up recurring cycles with random intervals\n                const intervalId = setInterval(()=>{\n                    performNormalMomentCycle();\n                }, 5000 + Math.random() * 3000); // Longer interval between cycles (5-8 seconds)\n                // Store interval for cleanup\n                const intervalTimeout = {\n                    unref: ()=>clearInterval(intervalId)\n                };\n                timeoutRefs.current.push(intervalTimeout);\n            }, 1000 + Math.random() * 500); // Initial delay before first animation\n        }\n        // Cleanup all timeouts on unmount or when animation type changes\n        return ()=>{\n            timeoutRefs.current.forEach((timeout)=>clearTimeout(timeout));\n            timeoutRefs.current = [];\n        };\n    }, [\n        animationType\n    ]);\n    return eyeState;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./hooks/useEyeAnimation.ts\n");

/***/ }),

/***/ "./hooks/useMouthAnimation.ts":
/*!************************************!*\
  !*** ./hooks/useMouthAnimation.ts ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useMouthAnimation: () => (/* binding */ useMouthAnimation)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"react\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Custom hook for mouth animations\n * \n * @param animationType - Type of mouth animation to perform\n * @returns Current mouth state that should be applied to the BeanHead\n */ function useMouthAnimation(animationType = \"none\") {\n    const [mouthState, setMouthState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"serious\");\n    const timeoutRefs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Helper to add timeouts to the ref array for later cleanup\n        const addTimeout = (callback, ms)=>{\n            const timeout = setTimeout(callback, ms);\n            timeoutRefs.current.push(timeout);\n            return timeout;\n        };\n        // Clear existing timeouts when animation type changes\n        timeoutRefs.current.forEach((timeout)=>clearTimeout(timeout));\n        timeoutRefs.current = [];\n        // Reset state when animation type changes\n        setMouthState(\"serious\");\n        if (animationType === \"none\") {\n            return;\n        }\n        if (animationType === \"happyTalk\") {\n            // Function for fast, continuous mouth movement\n            const animateMouth = ()=>{\n                // Toggle mouth state\n                setMouthState((prevState)=>prevState === \"openSmile\" ? \"serious\" : \"openSmile\");\n                // Schedule next toggle with slight irregularity (30-80ms)\n                const nextToggleDelay = 30 + (Math.random() + 1) * 100;\n                addTimeout(animateMouth, nextToggleDelay);\n            };\n            // Start the animation after a short delay\n            const initialDelay = addTimeout(()=>{\n                animateMouth();\n            }, 200);\n        }\n        if (animationType === \"sadTalk\") {\n            // Function for sad talking animation\n            const animateMouth = ()=>{\n                // Toggle mouth state between sad and serious\n                setMouthState((prevState)=>prevState === \"sad\" ? \"serious\" : \"sad\");\n                // Schedule next toggle with slight irregularity (30-80ms)\n                const nextToggleDelay = 30 + (Math.random() + 1) * 100;\n                addTimeout(animateMouth, nextToggleDelay);\n            };\n            // Start the animation after a short delay\n            const initialDelay = addTimeout(()=>{\n                animateMouth();\n            }, 200);\n        }\n        if (animationType === \"normalTalk\") {\n            // Function for normal talking animation using open mouth\n            const animateMouth = ()=>{\n                // Toggle mouth state between open and serious\n                setMouthState((prevState)=>prevState === \"open\" ? \"serious\" : \"open\");\n                // Schedule next toggle with slight irregularity (30-80ms)\n                const nextToggleDelay = 30 + (Math.random() + 1) * 100;\n                addTimeout(animateMouth, nextToggleDelay);\n            };\n            // Start the animation after a short delay\n            const initialDelay = addTimeout(()=>{\n                animateMouth();\n            }, 200);\n        }\n        // Cleanup all timeouts on unmount or when animation type changes\n        return ()=>{\n            timeoutRefs.current.forEach((timeout)=>clearTimeout(timeout));\n            timeoutRefs.current = [];\n        };\n    }, [\n        animationType\n    ]);\n    return mouthState;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ob29rcy91c2VNb3V0aEFuaW1hdGlvbi50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0Q7QUFNcEQ7Ozs7O0NBS0MsR0FDTSxTQUFTRyxrQkFBa0JDLGdCQUFvQyxNQUFNO0lBQzFFLE1BQU0sQ0FBQ0MsWUFBWUMsY0FBYyxHQUFHTiwrQ0FBUUEsQ0FBYTtJQUN6RCxNQUFNTyxjQUFjTCw2Q0FBTUEsQ0FBbUIsRUFBRTtJQUUvQ0QsZ0RBQVNBLENBQUM7UUFDUiw0REFBNEQ7UUFDNUQsTUFBTU8sYUFBYSxDQUFDQyxVQUFzQkM7WUFDeEMsTUFBTUMsVUFBVUMsV0FBV0gsVUFBVUM7WUFDckNILFlBQVlNLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDSDtZQUN6QixPQUFPQTtRQUNUO1FBRUEsc0RBQXNEO1FBQ3RESixZQUFZTSxPQUFPLENBQUNFLE9BQU8sQ0FBQ0osQ0FBQUEsVUFBV0ssYUFBYUw7UUFDcERKLFlBQVlNLE9BQU8sR0FBRyxFQUFFO1FBRXhCLDBDQUEwQztRQUMxQ1AsY0FBYztRQUVkLElBQUlGLGtCQUFrQixRQUFRO1lBQzVCO1FBQ0Y7UUFFQSxJQUFJQSxrQkFBa0IsYUFBYTtZQUNqQywrQ0FBK0M7WUFDL0MsTUFBTWEsZUFBZTtnQkFDbkIscUJBQXFCO2dCQUNyQlgsY0FBY1ksQ0FBQUEsWUFBYUEsY0FBYyxjQUFjLFlBQVk7Z0JBRW5FLDBEQUEwRDtnQkFDMUQsTUFBTUMsa0JBQWtCLEtBQUssQ0FBQ0MsS0FBS0MsTUFBTSxLQUFLLEtBQUs7Z0JBQ25EYixXQUFXUyxjQUFjRTtZQUMzQjtZQUVBLDBDQUEwQztZQUMxQyxNQUFNRyxlQUFlZCxXQUFXO2dCQUM5QlM7WUFDRixHQUFHO1FBQ0w7UUFFQSxJQUFJYixrQkFBa0IsV0FBVztZQUMvQixxQ0FBcUM7WUFDckMsTUFBTWEsZUFBZTtnQkFDbkIsNkNBQTZDO2dCQUM3Q1gsY0FBY1ksQ0FBQUEsWUFBYUEsY0FBYyxRQUFRLFlBQVk7Z0JBRTdELDBEQUEwRDtnQkFDMUQsTUFBTUMsa0JBQWtCLEtBQUssQ0FBQ0MsS0FBS0MsTUFBTSxLQUFLLEtBQUs7Z0JBQ25EYixXQUFXUyxjQUFjRTtZQUMzQjtZQUVBLDBDQUEwQztZQUMxQyxNQUFNRyxlQUFlZCxXQUFXO2dCQUM5QlM7WUFDRixHQUFHO1FBQ0w7UUFFQSxJQUFJYixrQkFBa0IsY0FBYztZQUNsQyx5REFBeUQ7WUFDekQsTUFBTWEsZUFBZTtnQkFDbkIsOENBQThDO2dCQUM5Q1gsY0FBY1ksQ0FBQUEsWUFBYUEsY0FBYyxTQUFTLFlBQVk7Z0JBRTlELDBEQUEwRDtnQkFDMUQsTUFBTUMsa0JBQWtCLEtBQUssQ0FBQ0MsS0FBS0MsTUFBTSxLQUFLLEtBQUs7Z0JBQ25EYixXQUFXUyxjQUFjRTtZQUMzQjtZQUVBLDBDQUEwQztZQUMxQyxNQUFNRyxlQUFlZCxXQUFXO2dCQUM5QlM7WUFDRixHQUFHO1FBQ0w7UUFFQSxpRUFBaUU7UUFDakUsT0FBTztZQUNMVixZQUFZTSxPQUFPLENBQUNFLE9BQU8sQ0FBQ0osQ0FBQUEsVUFBV0ssYUFBYUw7WUFDcERKLFlBQVlNLE9BQU8sR0FBRyxFQUFFO1FBQzFCO0lBQ0YsR0FBRztRQUFDVDtLQUFjO0lBRWxCLE9BQU9DO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9iZWFuaGVhZHMtdmlzdWFsaXplci8uL2hvb2tzL3VzZU1vdXRoQW5pbWF0aW9uLnRzPzVjMTUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCwgdXNlUmVmIH0gZnJvbSBcInJlYWN0XCI7XG5cbi8vIERlZmluZSB0aGUgcG9zc2libGUgbW91dGggc3RhdGVzIGFuZCBhbmltYXRpb24gdHlwZXNcbmV4cG9ydCB0eXBlIE1vdXRoQW5pbWF0aW9uVHlwZSA9IFwiaGFwcHlUYWxrXCIgfCBcInNhZFRhbGtcIiB8IFwibm9ybWFsVGFsa1wiIHwgXCJub25lXCI7XG5leHBvcnQgdHlwZSBNb3V0aFN0YXRlID0gXCJvcGVuU21pbGVcIiB8IFwic2VyaW91c1wiIHwgXCJncmluXCIgfCBcInNhZFwiIHwgXCJsaXBzXCIgfCBcIm9wZW5cIiB8IFwidG9uZ3VlXCI7XG5cbi8qKlxuICogQ3VzdG9tIGhvb2sgZm9yIG1vdXRoIGFuaW1hdGlvbnNcbiAqIFxuICogQHBhcmFtIGFuaW1hdGlvblR5cGUgLSBUeXBlIG9mIG1vdXRoIGFuaW1hdGlvbiB0byBwZXJmb3JtXG4gKiBAcmV0dXJucyBDdXJyZW50IG1vdXRoIHN0YXRlIHRoYXQgc2hvdWxkIGJlIGFwcGxpZWQgdG8gdGhlIEJlYW5IZWFkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiB1c2VNb3V0aEFuaW1hdGlvbihhbmltYXRpb25UeXBlOiBNb3V0aEFuaW1hdGlvblR5cGUgPSBcIm5vbmVcIik6IE1vdXRoU3RhdGUge1xuICBjb25zdCBbbW91dGhTdGF0ZSwgc2V0TW91dGhTdGF0ZV0gPSB1c2VTdGF0ZTxNb3V0aFN0YXRlPihcInNlcmlvdXNcIik7XG4gIGNvbnN0IHRpbWVvdXRSZWZzID0gdXNlUmVmPE5vZGVKUy5UaW1lb3V0W10+KFtdKTtcbiAgXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gSGVscGVyIHRvIGFkZCB0aW1lb3V0cyB0byB0aGUgcmVmIGFycmF5IGZvciBsYXRlciBjbGVhbnVwXG4gICAgY29uc3QgYWRkVGltZW91dCA9IChjYWxsYmFjazogKCkgPT4gdm9pZCwgbXM6IG51bWJlcikgPT4ge1xuICAgICAgY29uc3QgdGltZW91dCA9IHNldFRpbWVvdXQoY2FsbGJhY2ssIG1zKTtcbiAgICAgIHRpbWVvdXRSZWZzLmN1cnJlbnQucHVzaCh0aW1lb3V0KTtcbiAgICAgIHJldHVybiB0aW1lb3V0O1xuICAgIH07XG4gICAgXG4gICAgLy8gQ2xlYXIgZXhpc3RpbmcgdGltZW91dHMgd2hlbiBhbmltYXRpb24gdHlwZSBjaGFuZ2VzXG4gICAgdGltZW91dFJlZnMuY3VycmVudC5mb3JFYWNoKHRpbWVvdXQgPT4gY2xlYXJUaW1lb3V0KHRpbWVvdXQpKTtcbiAgICB0aW1lb3V0UmVmcy5jdXJyZW50ID0gW107XG4gICAgXG4gICAgLy8gUmVzZXQgc3RhdGUgd2hlbiBhbmltYXRpb24gdHlwZSBjaGFuZ2VzXG4gICAgc2V0TW91dGhTdGF0ZShcInNlcmlvdXNcIik7XG4gICAgXG4gICAgaWYgKGFuaW1hdGlvblR5cGUgPT09IFwibm9uZVwiKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuICAgIFxuICAgIGlmIChhbmltYXRpb25UeXBlID09PSBcImhhcHB5VGFsa1wiKSB7XG4gICAgICAvLyBGdW5jdGlvbiBmb3IgZmFzdCwgY29udGludW91cyBtb3V0aCBtb3ZlbWVudFxuICAgICAgY29uc3QgYW5pbWF0ZU1vdXRoID0gKCkgPT4ge1xuICAgICAgICAvLyBUb2dnbGUgbW91dGggc3RhdGVcbiAgICAgICAgc2V0TW91dGhTdGF0ZShwcmV2U3RhdGUgPT4gcHJldlN0YXRlID09PSBcIm9wZW5TbWlsZVwiID8gXCJzZXJpb3VzXCIgOiBcIm9wZW5TbWlsZVwiKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFNjaGVkdWxlIG5leHQgdG9nZ2xlIHdpdGggc2xpZ2h0IGlycmVndWxhcml0eSAoMzAtODBtcylcbiAgICAgICAgY29uc3QgbmV4dFRvZ2dsZURlbGF5ID0gMzAgKyAoTWF0aC5yYW5kb20oKSArIDEpICogMTAwO1xuICAgICAgICBhZGRUaW1lb3V0KGFuaW1hdGVNb3V0aCwgbmV4dFRvZ2dsZURlbGF5KTtcbiAgICAgIH07XG4gICAgICBcbiAgICAgIC8vIFN0YXJ0IHRoZSBhbmltYXRpb24gYWZ0ZXIgYSBzaG9ydCBkZWxheVxuICAgICAgY29uc3QgaW5pdGlhbERlbGF5ID0gYWRkVGltZW91dCgoKSA9PiB7XG4gICAgICAgIGFuaW1hdGVNb3V0aCgpO1xuICAgICAgfSwgMjAwKTtcbiAgICB9XG4gICAgXG4gICAgaWYgKGFuaW1hdGlvblR5cGUgPT09IFwic2FkVGFsa1wiKSB7XG4gICAgICAvLyBGdW5jdGlvbiBmb3Igc2FkIHRhbGtpbmcgYW5pbWF0aW9uXG4gICAgICBjb25zdCBhbmltYXRlTW91dGggPSAoKSA9PiB7XG4gICAgICAgIC8vIFRvZ2dsZSBtb3V0aCBzdGF0ZSBiZXR3ZWVuIHNhZCBhbmQgc2VyaW91c1xuICAgICAgICBzZXRNb3V0aFN0YXRlKHByZXZTdGF0ZSA9PiBwcmV2U3RhdGUgPT09IFwic2FkXCIgPyBcInNlcmlvdXNcIiA6IFwic2FkXCIpO1xuICAgICAgICBcbiAgICAgICAgLy8gU2NoZWR1bGUgbmV4dCB0b2dnbGUgd2l0aCBzbGlnaHQgaXJyZWd1bGFyaXR5ICgzMC04MG1zKVxuICAgICAgICBjb25zdCBuZXh0VG9nZ2xlRGVsYXkgPSAzMCArIChNYXRoLnJhbmRvbSgpICsgMSkgKiAxMDA7XG4gICAgICAgIGFkZFRpbWVvdXQoYW5pbWF0ZU1vdXRoLCBuZXh0VG9nZ2xlRGVsYXkpO1xuICAgICAgfTtcbiAgICAgIFxuICAgICAgLy8gU3RhcnQgdGhlIGFuaW1hdGlvbiBhZnRlciBhIHNob3J0IGRlbGF5XG4gICAgICBjb25zdCBpbml0aWFsRGVsYXkgPSBhZGRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgYW5pbWF0ZU1vdXRoKCk7XG4gICAgICB9LCAyMDApO1xuICAgIH1cbiAgICBcbiAgICBpZiAoYW5pbWF0aW9uVHlwZSA9PT0gXCJub3JtYWxUYWxrXCIpIHtcbiAgICAgIC8vIEZ1bmN0aW9uIGZvciBub3JtYWwgdGFsa2luZyBhbmltYXRpb24gdXNpbmcgb3BlbiBtb3V0aFxuICAgICAgY29uc3QgYW5pbWF0ZU1vdXRoID0gKCkgPT4ge1xuICAgICAgICAvLyBUb2dnbGUgbW91dGggc3RhdGUgYmV0d2VlbiBvcGVuIGFuZCBzZXJpb3VzXG4gICAgICAgIHNldE1vdXRoU3RhdGUocHJldlN0YXRlID0+IHByZXZTdGF0ZSA9PT0gXCJvcGVuXCIgPyBcInNlcmlvdXNcIiA6IFwib3BlblwiKTtcbiAgICAgICAgXG4gICAgICAgIC8vIFNjaGVkdWxlIG5leHQgdG9nZ2xlIHdpdGggc2xpZ2h0IGlycmVndWxhcml0eSAoMzAtODBtcylcbiAgICAgICAgY29uc3QgbmV4dFRvZ2dsZURlbGF5ID0gMzAgKyAoTWF0aC5yYW5kb20oKSArIDEpICogMTAwO1xuICAgICAgICBhZGRUaW1lb3V0KGFuaW1hdGVNb3V0aCwgbmV4dFRvZ2dsZURlbGF5KTtcbiAgICAgIH07XG4gICAgICBcbiAgICAgIC8vIFN0YXJ0IHRoZSBhbmltYXRpb24gYWZ0ZXIgYSBzaG9ydCBkZWxheVxuICAgICAgY29uc3QgaW5pdGlhbERlbGF5ID0gYWRkVGltZW91dCgoKSA9PiB7XG4gICAgICAgIGFuaW1hdGVNb3V0aCgpO1xuICAgICAgfSwgMjAwKTtcbiAgICB9XG4gICAgXG4gICAgLy8gQ2xlYW51cCBhbGwgdGltZW91dHMgb24gdW5tb3VudCBvciB3aGVuIGFuaW1hdGlvbiB0eXBlIGNoYW5nZXNcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgdGltZW91dFJlZnMuY3VycmVudC5mb3JFYWNoKHRpbWVvdXQgPT4gY2xlYXJUaW1lb3V0KHRpbWVvdXQpKTtcbiAgICAgIHRpbWVvdXRSZWZzLmN1cnJlbnQgPSBbXTtcbiAgICB9O1xuICB9LCBbYW5pbWF0aW9uVHlwZV0pO1xuICBcbiAgcmV0dXJuIG1vdXRoU3RhdGU7XG59ICJdLCJuYW1lcyI6WyJ1c2VTdGF0ZSIsInVzZUVmZmVjdCIsInVzZVJlZiIsInVzZU1vdXRoQW5pbWF0aW9uIiwiYW5pbWF0aW9uVHlwZSIsIm1vdXRoU3RhdGUiLCJzZXRNb3V0aFN0YXRlIiwidGltZW91dFJlZnMiLCJhZGRUaW1lb3V0IiwiY2FsbGJhY2siLCJtcyIsInRpbWVvdXQiLCJzZXRUaW1lb3V0IiwiY3VycmVudCIsInB1c2giLCJmb3JFYWNoIiwiY2xlYXJUaW1lb3V0IiwiYW5pbWF0ZU1vdXRoIiwicHJldlN0YXRlIiwibmV4dFRvZ2dsZURlbGF5IiwiTWF0aCIsInJhbmRvbSIsImluaXRpYWxEZWxheSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./hooks/useMouthAnimation.ts\n");

/***/ }),

/***/ "./utils/cn.ts":
/*!*********************!*\
  !*** ./utils/cn.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   cn: () => (/* binding */ cn)\n/* harmony export */ });\n/**\n * A simple utility function for conditionally joining classNames together\n */ function cn(...classes) {\n    return classes.filter(Boolean).join(\" \");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi91dGlscy9jbi50cyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7O0NBRUMsR0FDTSxTQUFTQSxHQUFHLEdBQUdDLE9BQWtEO0lBQ3RFLE9BQU9BLFFBQVFDLE1BQU0sQ0FBQ0MsU0FBU0MsSUFBSSxDQUFDO0FBQ3RDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmVhbmhlYWRzLXZpc3VhbGl6ZXIvLi91dGlscy9jbi50cz9lMjJlIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQSBzaW1wbGUgdXRpbGl0eSBmdW5jdGlvbiBmb3IgY29uZGl0aW9uYWxseSBqb2luaW5nIGNsYXNzTmFtZXMgdG9nZXRoZXJcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGNuKC4uLmNsYXNzZXM6IChzdHJpbmcgfCB1bmRlZmluZWQgfCBudWxsIHwgZmFsc2UgfCAwKVtdKSB7XG4gIHJldHVybiBjbGFzc2VzLmZpbHRlcihCb29sZWFuKS5qb2luKCcgJyk7XG59ICJdLCJuYW1lcyI6WyJjbiIsImNsYXNzZXMiLCJmaWx0ZXIiLCJCb29sZWFuIiwiam9pbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./utils/cn.ts\n");

/***/ })

};
;