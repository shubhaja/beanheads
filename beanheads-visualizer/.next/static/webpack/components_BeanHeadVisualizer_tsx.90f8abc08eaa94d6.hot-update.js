"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("components_BeanHeadVisualizer_tsx",{

/***/ "./hooks/useEmote.ts":
/*!***************************!*\
  !*** ./hooks/useEmote.ts ***!
  \***************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useEmote: function() { return /* binding */ useEmote; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction useEmote() {\n    let emoteType = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"none\", expressionAnimation = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : \"none\";\n    // Check if we should show sleep emote based on the expression\n    const shouldShowSleepEmote = expressionAnimation === \"sleeping\" || emoteType === \"sleep\";\n    // Initialize with default values based on emote type and expression\n    const [emoteConfig, setEmoteConfig] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        showEmote: emoteType !== \"none\" || shouldShowSleepEmote,\n        zDelay: emoteType === \"sleep\" || shouldShowSleepEmote ? 0.2 : undefined,\n        surpriseDelay: emoteType === \"surprise\" ? 0.1 : undefined\n    });\n    const timeoutsRef = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    // Clear all timeouts on cleanup\n    const clearAllTimeouts = ()=>{\n        timeoutsRef.current.forEach((timeout)=>clearTimeout(timeout));\n        timeoutsRef.current = [];\n    };\n    // Add a timeout and store its reference for cleanup\n    const addTimeout = (callback, ms)=>{\n        const timeoutId = setTimeout(callback, ms);\n        timeoutsRef.current.push(timeoutId);\n        return timeoutId;\n    };\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Determine if we should show the sleep emote based on expression type\n        const shouldShowSleepEmote = expressionAnimation === \"sleeping\" || emoteType === \"sleep\";\n        // Reset state when emote type or expression animation changes\n        setEmoteConfig({\n            showEmote: emoteType !== \"none\" || shouldShowSleepEmote,\n            zDelay: emoteType === \"sleep\" || shouldShowSleepEmote ? 0.2 : undefined,\n            surpriseDelay: emoteType === \"surprise\" ? 0.1 : undefined\n        });\n        // Clean up previous timeouts\n        clearAllTimeouts();\n        // Return cleanup function\n        return ()=>{\n            clearAllTimeouts();\n        };\n    }, [\n        emoteType,\n        expressionAnimation\n    ]);\n    return emoteConfig;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9ob29rcy91c2VFbW90ZS50cyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBb0Q7QUFnQjdDLFNBQVNHO1FBQ2RDLFlBQUFBLGlFQUF1QixRQUN2QkMsc0JBQUFBLGlFQUErQztJQUUvQyw4REFBOEQ7SUFDOUQsTUFBTUMsdUJBQXVCRCx3QkFBd0IsY0FBY0QsY0FBYztJQUVqRixvRUFBb0U7SUFDcEUsTUFBTSxDQUFDRyxhQUFhQyxlQUFlLEdBQUdSLCtDQUFRQSxDQUFjO1FBQzFEUyxXQUFXTCxjQUFjLFVBQVVFO1FBQ25DSSxRQUFRLGNBQWUsV0FBV0osdUJBQXdCLE1BQU1LO1FBQ2hFQyxlQUFlUixjQUFjLGFBQWEsTUFBTU87SUFDbEQ7SUFFQSxNQUFNRSxjQUFjWCw2Q0FBTUEsQ0FBbUIsRUFBRTtJQUUvQyxnQ0FBZ0M7SUFDaEMsTUFBTVksbUJBQW1CO1FBQ3ZCRCxZQUFZRSxPQUFPLENBQUNDLE9BQU8sQ0FBQyxDQUFDQyxVQUFZQyxhQUFhRDtRQUN0REosWUFBWUUsT0FBTyxHQUFHLEVBQUU7SUFDMUI7SUFFQSxvREFBb0Q7SUFDcEQsTUFBTUksYUFBYSxDQUFDQyxVQUFzQkM7UUFDeEMsTUFBTUMsWUFBWUMsV0FBV0gsVUFBVUM7UUFDdkNSLFlBQVlFLE9BQU8sQ0FBQ1MsSUFBSSxDQUFDRjtRQUN6QixPQUFPQTtJQUNUO0lBRUFyQixnREFBU0EsQ0FBQztRQUNSLHVFQUF1RTtRQUN2RSxNQUFNSyx1QkFBdUJELHdCQUF3QixjQUFjRCxjQUFjO1FBRWpGLDhEQUE4RDtRQUM5REksZUFBZTtZQUNiQyxXQUFXTCxjQUFjLFVBQVVFO1lBQ25DSSxRQUFRLGNBQWUsV0FBV0osdUJBQXdCLE1BQU1LO1lBQ2hFQyxlQUFlUixjQUFjLGFBQWEsTUFBTU87UUFDbEQ7UUFFQSw2QkFBNkI7UUFDN0JHO1FBRUEsMEJBQTBCO1FBQzFCLE9BQU87WUFDTEE7UUFDRjtJQUNGLEdBQUc7UUFBQ1Y7UUFBV0M7S0FBb0I7SUFFbkMsT0FBT0U7QUFDVCIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ob29rcy91c2VFbW90ZS50cz8yY2I0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VFZmZlY3QsIHVzZVJlZiB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgRXhwcmVzc2lvbkFuaW1hdGlvblR5cGUgfSBmcm9tIFwiLi91c2VFeHByZXNzaW9uQW5pbWF0aW9uXCI7XG5cbi8vIERlZmluZSBlbW90ZSB0eXBlc1xuZXhwb3J0IHR5cGUgRW1vdGVUeXBlID0gXG4gIHwgXCJzbGVlcFwiXG4gIHwgXCJzdXJwcmlzZVwiXG4gIHwgXCJub25lXCI7XG5cbi8vIERlZmluZSBlbW90ZSBjb25maWd1cmF0aW9uXG5leHBvcnQgaW50ZXJmYWNlIEVtb3RlQ29uZmlnIHtcbiAgc2hvd0Vtb3RlOiBib29sZWFuO1xuICB6RGVsYXk/OiBudW1iZXI7IC8vIFNwZWNpZmljIHRvIFpaWiBlbW90ZVxuICBzdXJwcmlzZURlbGF5PzogbnVtYmVyOyAvLyBTcGVjaWZpYyB0byBzdXJwcmlzZSBlbW90ZVxufVxuXG5leHBvcnQgZnVuY3Rpb24gdXNlRW1vdGUoXG4gIGVtb3RlVHlwZTogRW1vdGVUeXBlID0gXCJub25lXCIsIFxuICBleHByZXNzaW9uQW5pbWF0aW9uOiBFeHByZXNzaW9uQW5pbWF0aW9uVHlwZSA9IFwibm9uZVwiXG4pOiBFbW90ZUNvbmZpZyB7XG4gIC8vIENoZWNrIGlmIHdlIHNob3VsZCBzaG93IHNsZWVwIGVtb3RlIGJhc2VkIG9uIHRoZSBleHByZXNzaW9uXG4gIGNvbnN0IHNob3VsZFNob3dTbGVlcEVtb3RlID0gZXhwcmVzc2lvbkFuaW1hdGlvbiA9PT0gXCJzbGVlcGluZ1wiIHx8IGVtb3RlVHlwZSA9PT0gXCJzbGVlcFwiO1xuXG4gIC8vIEluaXRpYWxpemUgd2l0aCBkZWZhdWx0IHZhbHVlcyBiYXNlZCBvbiBlbW90ZSB0eXBlIGFuZCBleHByZXNzaW9uXG4gIGNvbnN0IFtlbW90ZUNvbmZpZywgc2V0RW1vdGVDb25maWddID0gdXNlU3RhdGU8RW1vdGVDb25maWc+KHtcbiAgICBzaG93RW1vdGU6IGVtb3RlVHlwZSAhPT0gXCJub25lXCIgfHwgc2hvdWxkU2hvd1NsZWVwRW1vdGUsXG4gICAgekRlbGF5OiAoZW1vdGVUeXBlID09PSBcInNsZWVwXCIgfHwgc2hvdWxkU2hvd1NsZWVwRW1vdGUpID8gMC4yIDogdW5kZWZpbmVkLFxuICAgIHN1cnByaXNlRGVsYXk6IGVtb3RlVHlwZSA9PT0gXCJzdXJwcmlzZVwiID8gMC4xIDogdW5kZWZpbmVkXG4gIH0pO1xuICBcbiAgY29uc3QgdGltZW91dHNSZWYgPSB1c2VSZWY8Tm9kZUpTLlRpbWVvdXRbXT4oW10pO1xuICBcbiAgLy8gQ2xlYXIgYWxsIHRpbWVvdXRzIG9uIGNsZWFudXBcbiAgY29uc3QgY2xlYXJBbGxUaW1lb3V0cyA9ICgpID0+IHtcbiAgICB0aW1lb3V0c1JlZi5jdXJyZW50LmZvckVhY2goKHRpbWVvdXQpID0+IGNsZWFyVGltZW91dCh0aW1lb3V0KSk7XG4gICAgdGltZW91dHNSZWYuY3VycmVudCA9IFtdO1xuICB9O1xuICBcbiAgLy8gQWRkIGEgdGltZW91dCBhbmQgc3RvcmUgaXRzIHJlZmVyZW5jZSBmb3IgY2xlYW51cFxuICBjb25zdCBhZGRUaW1lb3V0ID0gKGNhbGxiYWNrOiAoKSA9PiB2b2lkLCBtczogbnVtYmVyKSA9PiB7XG4gICAgY29uc3QgdGltZW91dElkID0gc2V0VGltZW91dChjYWxsYmFjaywgbXMpO1xuICAgIHRpbWVvdXRzUmVmLmN1cnJlbnQucHVzaCh0aW1lb3V0SWQpO1xuICAgIHJldHVybiB0aW1lb3V0SWQ7XG4gIH07XG5cbiAgdXNlRWZmZWN0KCgpID0+IHtcbiAgICAvLyBEZXRlcm1pbmUgaWYgd2Ugc2hvdWxkIHNob3cgdGhlIHNsZWVwIGVtb3RlIGJhc2VkIG9uIGV4cHJlc3Npb24gdHlwZVxuICAgIGNvbnN0IHNob3VsZFNob3dTbGVlcEVtb3RlID0gZXhwcmVzc2lvbkFuaW1hdGlvbiA9PT0gXCJzbGVlcGluZ1wiIHx8IGVtb3RlVHlwZSA9PT0gXCJzbGVlcFwiO1xuICAgIFxuICAgIC8vIFJlc2V0IHN0YXRlIHdoZW4gZW1vdGUgdHlwZSBvciBleHByZXNzaW9uIGFuaW1hdGlvbiBjaGFuZ2VzXG4gICAgc2V0RW1vdGVDb25maWcoe1xuICAgICAgc2hvd0Vtb3RlOiBlbW90ZVR5cGUgIT09IFwibm9uZVwiIHx8IHNob3VsZFNob3dTbGVlcEVtb3RlLFxuICAgICAgekRlbGF5OiAoZW1vdGVUeXBlID09PSBcInNsZWVwXCIgfHwgc2hvdWxkU2hvd1NsZWVwRW1vdGUpID8gMC4yIDogdW5kZWZpbmVkLFxuICAgICAgc3VycHJpc2VEZWxheTogZW1vdGVUeXBlID09PSBcInN1cnByaXNlXCIgPyAwLjEgOiB1bmRlZmluZWRcbiAgICB9KTtcbiAgICBcbiAgICAvLyBDbGVhbiB1cCBwcmV2aW91cyB0aW1lb3V0c1xuICAgIGNsZWFyQWxsVGltZW91dHMoKTtcbiAgICBcbiAgICAvLyBSZXR1cm4gY2xlYW51cCBmdW5jdGlvblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICBjbGVhckFsbFRpbWVvdXRzKCk7XG4gICAgfTtcbiAgfSwgW2Vtb3RlVHlwZSwgZXhwcmVzc2lvbkFuaW1hdGlvbl0pO1xuICBcbiAgcmV0dXJuIGVtb3RlQ29uZmlnO1xufSAiXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ1c2VSZWYiLCJ1c2VFbW90ZSIsImVtb3RlVHlwZSIsImV4cHJlc3Npb25BbmltYXRpb24iLCJzaG91bGRTaG93U2xlZXBFbW90ZSIsImVtb3RlQ29uZmlnIiwic2V0RW1vdGVDb25maWciLCJzaG93RW1vdGUiLCJ6RGVsYXkiLCJ1bmRlZmluZWQiLCJzdXJwcmlzZURlbGF5IiwidGltZW91dHNSZWYiLCJjbGVhckFsbFRpbWVvdXRzIiwiY3VycmVudCIsImZvckVhY2giLCJ0aW1lb3V0IiwiY2xlYXJUaW1lb3V0IiwiYWRkVGltZW91dCIsImNhbGxiYWNrIiwibXMiLCJ0aW1lb3V0SWQiLCJzZXRUaW1lb3V0IiwicHVzaCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./hooks/useEmote.ts\n"));

/***/ })

});