"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("components_BeanHeadVisualizer_tsx",{

/***/ "./hooks/useEyeAnimation.ts":
/*!**********************************!*\
  !*** ./hooks/useEyeAnimation.ts ***!
  \**********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useEyeAnimation: function() { return /* binding */ useEyeAnimation; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\n/**\n * Custom hook for eye animations\n * \n * @param animationType - Type of eye animation to perform\n * @returns Current eye state that should be applied to the BeanHead\n */ function useEyeAnimation() {\n    let animationType = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"none\";\n    const [eyeState, setEyeState] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(\"normal\");\n    const timeoutRefs = (0,react__WEBPACK_IMPORTED_MODULE_0__.useRef)([]);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Helper to add timeouts to the ref array for later cleanup\n        const addTimeout = (callback, ms)=>{\n            const timeout = setTimeout(callback, ms);\n            timeoutRefs.current.push(timeout);\n            return timeout;\n        };\n        // Clear existing timeouts when animation type changes\n        timeoutRefs.current.forEach((timeout)=>clearTimeout(timeout));\n        timeoutRefs.current = [];\n        // Reset state when animation type changes\n        setEyeState(\"normal\");\n        if (animationType === \"none\") {\n            return;\n        }\n        if (animationType === \"blink\") {\n            // Function to handle one complete blink cycle\n            const performBlinkCycle = ()=>{\n                // First blink\n                setEyeState(\"squint\");\n                addTimeout(()=>{\n                    setEyeState(\"content\");\n                    addTimeout(()=>{\n                        setEyeState(\"normal\");\n                        // Small pause before second blink\n                        addTimeout(()=>{\n                            // Second blink\n                            setEyeState(\"squint\");\n                            addTimeout(()=>{\n                                setEyeState(\"content\");\n                                addTimeout(()=>{\n                                    setEyeState(\"normal\");\n                                }, 80); // Time with eyes fully closed (second blink)\n                            }, 70); // Time with eyes squinted (second blink)\n                        }, 200 + (Math.random() + 1) * 100); // Variable pause between blinks\n                    }, 80); // Time with eyes fully closed (first blink)\n                }, 70); // Time with eyes squinted (first blink)\n            };\n            // Initial delay before starting the animation\n            const initialDelay = addTimeout(()=>{\n                // Initial blink cycle\n                performBlinkCycle();\n                // Set up recurring blink cycles with random intervals\n                const intervalId = setInterval(()=>{\n                    performBlinkCycle();\n                }, 4000 + Math.random() * 2000); // Random interval between 4-6 seconds\n                // Store interval for cleanup\n                const intervalTimeout = {\n                    unref: ()=>clearInterval(intervalId)\n                };\n                timeoutRefs.current.push(intervalTimeout);\n            }, 1000 + Math.random() * 1500); // Random initial delay\n        }\n        if (animationType === \"leftTwitch\") {\n            // Function to handle one normal moment cycle\n            const performNormalMomentCycle = ()=>{\n                // Switch to normal eyes\n                setEyeState(\"normal\");\n                // Stay in normal state for longer (800-1200ms)\n                addTimeout(()=>{\n                    // Switch back to twitching\n                    setEyeState(\"leftTwitch\");\n                    // Stay in leftTwitch state briefly (300-500ms)\n                    addTimeout(()=>{\n                        // Back to normal for another period\n                        setEyeState(\"normal\");\n                        // Stay in normal state again (700-1000ms)\n                        addTimeout(()=>{\n                            // Another brief twitch\n                            setEyeState(\"leftTwitch\");\n                            // Sometimes add a third normal moment\n                            if (Math.random() > 0.4) {\n                                addTimeout(()=>{\n                                    setEyeState(\"normal\");\n                                    // Stay in normal state again (600-900ms)\n                                    addTimeout(()=>{\n                                        setEyeState(\"leftTwitch\");\n                                    }, 600 + Math.random() * 300);\n                                }, 200 + Math.random() * 100);\n                            }\n                        }, 700 + Math.random() * 300);\n                    }, 300 + Math.random() * 200);\n                }, 800 + Math.random() * 400);\n            };\n            // Set initial state to leftTwitch\n            setEyeState(\"leftTwitch\");\n            // Initial delay before first cycle\n            const initialDelay = addTimeout(()=>{\n                // Initial cycle\n                performNormalMomentCycle();\n                // Set up recurring cycles with random intervals\n                const intervalId = setInterval(()=>{\n                    performNormalMomentCycle();\n                }, 5000 + Math.random() * 3000); // Longer interval between cycles (5-8 seconds)\n                // Store interval for cleanup\n                const intervalTimeout = {\n                    unref: ()=>clearInterval(intervalId)\n                };\n                timeoutRefs.current.push(intervalTimeout);\n            }, 1000 + Math.random() * 500); // Initial delay before first animation\n        }\n        // Cleanup all timeouts on unmount or when animation type changes\n        return ()=>{\n            timeoutRefs.current.forEach((timeout)=>clearTimeout(timeout));\n            timeoutRefs.current = [];\n        };\n    }, [\n        animationType\n    ]);\n    return eyeState;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./hooks/useEyeAnimation.ts\n"));

/***/ })

});